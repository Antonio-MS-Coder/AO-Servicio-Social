{"version":3,"file":"static/js/169.a99733bb.chunk.js","mappings":"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","sources":["components/auth/RegisterEnhanced.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport {\n  Container,\n  Paper,\n  TextField,\n  Button,\n  Typography,\n  Box,\n  Alert,\n  CircularProgress,\n  Divider,\n  Tab,\n  Tabs,\n  InputAdornment,\n  IconButton,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  Stepper,\n  Step,\n  StepLabel,\n  Checkbox,\n  FormHelperText\n} from '@mui/material';\nimport {\n  Google as GoogleIcon,\n  Phone as PhoneIcon,\n  Email as EmailIcon,\n  Visibility,\n  VisibilityOff,\n  ArrowBack,\n  Person,\n  Business,\n  Check\n} from '@mui/icons-material';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { signInWithGoogle, setupRecaptcha, signInWithPhone } from '../../config/firebase';\nimport { createUserWithEmailAndPassword, updateProfile } from 'firebase/auth';\nimport { doc, setDoc } from 'firebase/firestore';\nimport { auth, db } from '../../config/firebase';\nimport { RecaptchaVerifier, ConfirmationResult } from 'firebase/auth';\nimport { User, UserRole } from '../../types';\n\ninterface RegisterFormData {\n  // Datos básicos\n  fullName: string;\n  email: string;\n  phone: string;\n  password: string;\n  confirmPassword: string;\n  role: UserRole;\n  \n  // Datos específicos del trabajador\n  trade?: string;\n  experience?: number;\n  \n  // Datos específicos del empleador\n  companyName?: string;\n  businessType?: string;\n  \n  // General\n  location: string;\n  acceptTerms: boolean;\n}\n\nconst RegisterEnhanced: React.FC = () => {\n  const navigate = useNavigate();\n  const { register } = useAuth();\n  \n  // Stepper\n  const [activeStep, setActiveStep] = useState(0);\n  const steps = ['Método de registro', 'Tipo de cuenta', 'Información personal', 'Verificación'];\n  \n  // Método de registro\n  const [authMethod, setAuthMethod] = useState(0); // 0: Email, 1: Phone, 2: Google\n  \n  // Form data\n  const [formData, setFormData] = useState<RegisterFormData>({\n    fullName: '',\n    email: '',\n    phone: '',\n    password: '',\n    confirmPassword: '',\n    role: 'worker',\n    trade: '',\n    experience: 0,\n    companyName: '',\n    businessType: '',\n    location: 'Álvaro Obregón',\n    acceptTerms: false\n  });\n  \n  // Phone auth state\n  const [verificationCode, setVerificationCode] = useState('');\n  const [confirmationResult, setConfirmationResult] = useState<ConfirmationResult | null>(null);\n  const [recaptchaVerifier, setRecaptchaVerifier] = useState<RecaptchaVerifier | null>(null);\n  \n  // General state\n  const [showPassword, setShowPassword] = useState(false);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [fieldErrors, setFieldErrors] = useState<Record<string, string>>({});\n\n  useEffect(() => {\n    // Setup reCAPTCHA cuando el componente se monta\n    if (!recaptchaVerifier && authMethod === 1) {\n      const verifier = setupRecaptcha('register-recaptcha-container');\n      setRecaptchaVerifier(verifier);\n    }\n  }, [recaptchaVerifier, authMethod]);\n\n  // Validación de campos\n  const validateField = (field: string, value: any): string => {\n    switch (field) {\n      case 'fullName':\n        return value.length < 3 ? 'El nombre debe tener al menos 3 caracteres' : '';\n      case 'email':\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return !emailRegex.test(value) ? 'Email inválido' : '';\n      case 'phone':\n        return value.length < 10 ? 'El teléfono debe tener 10 dígitos' : '';\n      case 'password':\n        return value.length < 6 ? 'La contraseña debe tener al menos 6 caracteres' : '';\n      case 'confirmPassword':\n        return value !== formData.password ? 'Las contraseñas no coinciden' : '';\n      case 'companyName':\n        return formData.role === 'employer' && value.length < 2 \n          ? 'El nombre de la empresa es requerido' : '';\n      case 'trade':\n        return formData.role === 'worker' && !value \n          ? 'Selecciona tu oficio principal' : '';\n      case 'acceptTerms':\n        return !value ? 'Debes aceptar los términos y condiciones' : '';\n      default:\n        return '';\n    }\n  };\n\n  // Manejar cambios en el formulario\n  const handleInputChange = (field: string, value: any) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    \n    // Validación en tiempo real\n    const error = validateField(field, value);\n    setFieldErrors(prev => ({ ...prev, [field]: error }));\n  };\n\n  // Validar paso actual\n  const validateCurrentStep = (): boolean => {\n    let isValid = true;\n    const errors: Record<string, string> = {};\n\n    switch (activeStep) {\n      case 0: // Método de registro\n        // No requiere validación\n        break;\n      case 1: // Tipo de cuenta\n        if (!formData.role) {\n          errors.role = 'Selecciona un tipo de cuenta';\n          isValid = false;\n        }\n        break;\n      case 2: // Información personal\n        if (authMethod === 0) { // Email\n          ['fullName', 'email', 'password', 'confirmPassword'].forEach(field => {\n            const error = validateField(field, formData[field as keyof RegisterFormData]);\n            if (error) {\n              errors[field] = error;\n              isValid = false;\n            }\n          });\n        } else if (authMethod === 1) { // Phone\n          ['fullName', 'phone'].forEach(field => {\n            const error = validateField(field, formData[field as keyof RegisterFormData]);\n            if (error) {\n              errors[field] = error;\n              isValid = false;\n            }\n          });\n        }\n        \n        // Validación específica por rol\n        if (formData.role === 'worker' && !formData.trade) {\n          errors.trade = 'Selecciona tu oficio principal';\n          isValid = false;\n        }\n        if (formData.role === 'employer' && !formData.companyName) {\n          errors.companyName = 'El nombre de la empresa es requerido';\n          isValid = false;\n        }\n        \n        if (!formData.acceptTerms) {\n          errors.acceptTerms = 'Debes aceptar los términos y condiciones';\n          isValid = false;\n        }\n        break;\n    }\n\n    setFieldErrors(errors);\n    return isValid;\n  };\n\n  // Manejar siguiente paso\n  const handleNext = async () => {\n    if (!validateCurrentStep()) {\n      setError('Por favor completa todos los campos requeridos');\n      return;\n    }\n\n    if (activeStep === steps.length - 2) {\n      // Último paso antes de verificación, iniciar registro\n      if (authMethod === 0) {\n        await handleEmailRegister();\n      } else if (authMethod === 1) {\n        await handlePhoneRegister();\n      }\n    } else {\n      setActiveStep(prev => prev + 1);\n    }\n  };\n\n  // Manejar paso anterior\n  const handleBack = () => {\n    setActiveStep(prev => prev - 1);\n    setError('');\n  };\n\n  // Registro con email\n  const handleEmailRegister = async () => {\n    try {\n      setError('');\n      setLoading(true);\n\n      // Crear usuario en Firebase Auth\n      const userCredential = await createUserWithEmailAndPassword(\n        auth,\n        formData.email,\n        formData.password\n      );\n\n      // Actualizar perfil con el nombre\n      await updateProfile(userCredential.user, {\n        displayName: formData.fullName\n      });\n\n      // Crear documento de usuario en Firestore\n      await createUserProfile(userCredential.user.uid, {\n        email: formData.email,\n        displayName: formData.fullName\n      });\n\n      setActiveStep(prev => prev + 1);\n      \n      // Redirigir después de 2 segundos\n      setTimeout(() => {\n        navigate('/onboarding');\n      }, 2000);\n\n    } catch (error: any) {\n      if (error.code === 'auth/email-already-in-use') {\n        setError('Este email ya está registrado. Por favor inicia sesión.');\n      } else if (error.code === 'auth/weak-password') {\n        setError('La contraseña es muy débil.');\n      } else {\n        setError(error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Registro con teléfono\n  const handlePhoneRegister = async () => {\n    try {\n      setError('');\n      setLoading(true);\n\n      // Formatear número de teléfono para México\n      let formattedPhone = formData.phone;\n      if (!formattedPhone.startsWith('+')) {\n        formattedPhone = '+52' + formattedPhone.replace(/\\D/g, '');\n      }\n\n      if (!recaptchaVerifier) {\n        throw new Error('reCAPTCHA no está configurado');\n      }\n\n      const confirmation = await signInWithPhone(formattedPhone, recaptchaVerifier);\n      setConfirmationResult(confirmation);\n      setActiveStep(prev => prev + 1);\n\n    } catch (error: any) {\n      if (error.code === 'auth/invalid-phone-number') {\n        setError('Número de teléfono inválido');\n      } else {\n        setError(error.message);\n      }\n      \n      // Reset reCAPTCHA\n      const verifier = setupRecaptcha('register-recaptcha-container');\n      setRecaptchaVerifier(verifier);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Verificar código SMS\n  const handleVerifyCode = async () => {\n    try {\n      setError('');\n      setLoading(true);\n\n      if (!confirmationResult) {\n        throw new Error('No hay verificación pendiente');\n      }\n\n      const result = await confirmationResult.confirm(verificationCode);\n\n      // Actualizar perfil con el nombre\n      await updateProfile(result.user, {\n        displayName: formData.fullName\n      });\n\n      // Crear perfil de usuario\n      await createUserProfile(result.user.uid, {\n        phone: formData.phone,\n        displayName: formData.fullName\n      });\n\n      // Redirigir a onboarding\n      navigate('/onboarding');\n\n    } catch (error: any) {\n      if (error.code === 'auth/invalid-verification-code') {\n        setError('Código de verificación incorrecto');\n      } else {\n        setError(error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Registro con Google\n  const handleGoogleRegister = async () => {\n    try {\n      setError('');\n      setLoading(true);\n\n      const result = await signInWithGoogle();\n      \n      // Crear perfil de usuario\n      await createUserProfile(result.user.uid, {\n        email: result.user.email || '',\n        displayName: result.user.displayName || '',\n        photoURL: result.user.photoURL || ''\n      });\n\n      navigate('/onboarding');\n\n    } catch (error: any) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Crear perfil de usuario en Firestore\n  const createUserProfile = async (uid: string, additionalData: any) => {\n    const userData: User = {\n      id: uid,\n      email: additionalData.email || formData.email || '',\n      phone: additionalData.phone || formData.phone || '',\n      displayName: additionalData.displayName || formData.fullName || '',\n      photoURL: additionalData.photoURL || '',\n      role: formData.role,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n\n    await setDoc(doc(db, 'users', uid), userData);\n\n    // Crear perfil específico según el rol\n    if (formData.role === 'worker') {\n      await setDoc(doc(db, 'workers', uid), {\n        userId: uid,\n        name: formData.fullName,\n        phone: formData.phone,\n        trade: formData.trade || '',\n        experience: formData.experience || 0,\n        location: formData.location,\n        certifications: [],\n        rating: 0,\n        totalRatings: 0,\n        available: true,\n        createdAt: new Date(),\n        updatedAt: new Date()\n      });\n    } else {\n      await setDoc(doc(db, 'employers', uid), {\n        userId: uid,\n        companyName: formData.companyName || '',\n        contactName: formData.fullName,\n        phone: formData.phone,\n        businessType: formData.businessType || '',\n        location: formData.location,\n        rating: 0,\n        totalRatings: 0,\n        createdAt: new Date(),\n        updatedAt: new Date()\n      });\n    }\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      <Box sx={{ mt: 4, mb: 4 }}>\n        <Paper elevation={3} sx={{ p: 4 }}>\n          <Typography variant=\"h4\" align=\"center\" gutterBottom fontWeight=\"bold\">\n            Únete a DOOM\n          </Typography>\n          \n          <Typography variant=\"body1\" align=\"center\" color=\"text.secondary\" sx={{ mb: 3 }}>\n            Conecta con oportunidades para el Mundial 2026\n          </Typography>\n\n          <Stepper activeStep={activeStep} sx={{ mb: 4 }}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n\n          {error && (\n            <Alert severity=\"error\" sx={{ mb: 2 }} onClose={() => setError('')}>\n              {error}\n            </Alert>\n          )}\n\n          {/* Step 0: Método de registro */}\n          {activeStep === 0 && (\n            <Box>\n              <Typography variant=\"h6\" gutterBottom>\n                ¿Cómo quieres registrarte?\n              </Typography>\n              \n              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, mt: 3 }}>\n                <Paper\n                  elevation={authMethod === 0 ? 4 : 1}\n                  sx={{\n                    p: 3,\n                    cursor: 'pointer',\n                    border: authMethod === 0 ? '2px solid' : '2px solid transparent',\n                    borderColor: authMethod === 0 ? 'primary.main' : 'transparent',\n                    transition: 'all 0.3s ease',\n                    '&:hover': {\n                      elevation: 3,\n                      borderColor: 'primary.light'\n                    }\n                  }}\n                  onClick={() => setAuthMethod(0)}\n                >\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                    <EmailIcon color={authMethod === 0 ? 'primary' : 'action'} />\n                    <Box>\n                      <Typography variant=\"subtitle1\" fontWeight=\"bold\">\n                        Correo electrónico\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Regístrate con tu email y contraseña\n                      </Typography>\n                    </Box>\n                  </Box>\n                </Paper>\n\n                <Paper\n                  elevation={authMethod === 1 ? 4 : 1}\n                  sx={{\n                    p: 3,\n                    cursor: 'pointer',\n                    border: authMethod === 1 ? '2px solid' : '2px solid transparent',\n                    borderColor: authMethod === 1 ? 'primary.main' : 'transparent',\n                    transition: 'all 0.3s ease',\n                    '&:hover': {\n                      elevation: 3,\n                      borderColor: 'primary.light'\n                    }\n                  }}\n                  onClick={() => setAuthMethod(1)}\n                >\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                    <PhoneIcon color={authMethod === 1 ? 'primary' : 'action'} />\n                    <Box>\n                      <Typography variant=\"subtitle1\" fontWeight=\"bold\">\n                        Número de teléfono\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Recibe un código SMS para verificar\n                      </Typography>\n                    </Box>\n                  </Box>\n                </Paper>\n\n                <Paper\n                  elevation={authMethod === 2 ? 4 : 1}\n                  sx={{\n                    p: 3,\n                    cursor: 'pointer',\n                    border: authMethod === 2 ? '2px solid' : '2px solid transparent',\n                    borderColor: authMethod === 2 ? '#4285f4' : 'transparent',\n                    transition: 'all 0.3s ease',\n                    '&:hover': {\n                      elevation: 3,\n                      borderColor: '#357ae8'\n                    }\n                  }}\n                  onClick={() => {\n                    setAuthMethod(2);\n                    handleGoogleRegister();\n                  }}\n                >\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                    <GoogleIcon sx={{ color: authMethod === 2 ? '#4285f4' : 'action' }} />\n                    <Box>\n                      <Typography variant=\"subtitle1\" fontWeight=\"bold\">\n                        Google\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Continúa con tu cuenta de Google\n                      </Typography>\n                    </Box>\n                  </Box>\n                </Paper>\n              </Box>\n            </Box>\n          )}\n\n          {/* Step 1: Tipo de cuenta */}\n          {activeStep === 1 && (\n            <Box>\n              <Typography variant=\"h6\" gutterBottom>\n                ¿Qué tipo de cuenta necesitas?\n              </Typography>\n              \n              <FormControl component=\"fieldset\" sx={{ mt: 3, width: '100%' }}>\n                <RadioGroup\n                  value={formData.role}\n                  onChange={(e) => handleInputChange('role', e.target.value)}\n                >\n                  <Paper sx={{ mb: 2, p: 2 }}>\n                    <FormControlLabel\n                      value=\"worker\"\n                      control={<Radio />}\n                      label={\n                        <Box>\n                          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                            <Person color=\"primary\" />\n                            <Typography variant=\"subtitle1\" fontWeight=\"bold\">\n                              Trabajador\n                            </Typography>\n                          </Box>\n                          <Typography variant=\"body2\" color=\"text.secondary\">\n                            Busco oportunidades de empleo para el Mundial 2026\n                          </Typography>\n                        </Box>\n                      }\n                    />\n                  </Paper>\n                  \n                  <Paper sx={{ p: 2 }}>\n                    <FormControlLabel\n                      value=\"employer\"\n                      control={<Radio />}\n                      label={\n                        <Box>\n                          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                            <Business color=\"secondary\" />\n                            <Typography variant=\"subtitle1\" fontWeight=\"bold\">\n                              Empleador\n                            </Typography>\n                          </Box>\n                          <Typography variant=\"body2\" color=\"text.secondary\">\n                            Busco contratar trabajadores calificados\n                          </Typography>\n                        </Box>\n                      }\n                    />\n                  </Paper>\n                </RadioGroup>\n              </FormControl>\n            </Box>\n          )}\n\n          {/* Step 2: Información personal */}\n          {activeStep === 2 && (\n            <Box>\n              <Typography variant=\"h6\" gutterBottom>\n                Información personal\n              </Typography>\n              \n              <Box sx={{ mt: 3 }}>\n                <TextField\n                  fullWidth\n                  label=\"Nombre completo\"\n                  value={formData.fullName}\n                  onChange={(e) => handleInputChange('fullName', e.target.value)}\n                  error={!!fieldErrors.fullName}\n                  helperText={fieldErrors.fullName}\n                  sx={{ mb: 2 }}\n                />\n\n                {authMethod === 0 && (\n                  <>\n                    <TextField\n                      fullWidth\n                      type=\"email\"\n                      label=\"Correo electrónico\"\n                      value={formData.email}\n                      onChange={(e) => handleInputChange('email', e.target.value)}\n                      error={!!fieldErrors.email}\n                      helperText={fieldErrors.email}\n                      sx={{ mb: 2 }}\n                    />\n\n                    <TextField\n                      fullWidth\n                      type={showPassword ? 'text' : 'password'}\n                      label=\"Contraseña\"\n                      value={formData.password}\n                      onChange={(e) => handleInputChange('password', e.target.value)}\n                      error={!!fieldErrors.password}\n                      helperText={fieldErrors.password || 'Mínimo 6 caracteres'}\n                      InputProps={{\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <IconButton\n                              onClick={() => setShowPassword(!showPassword)}\n                              edge=\"end\"\n                            >\n                              {showPassword ? <VisibilityOff /> : <Visibility />}\n                            </IconButton>\n                          </InputAdornment>\n                        ),\n                      }}\n                      sx={{ mb: 2 }}\n                    />\n\n                    <TextField\n                      fullWidth\n                      type={showPassword ? 'text' : 'password'}\n                      label=\"Confirmar contraseña\"\n                      value={formData.confirmPassword}\n                      onChange={(e) => handleInputChange('confirmPassword', e.target.value)}\n                      error={!!fieldErrors.confirmPassword}\n                      helperText={fieldErrors.confirmPassword}\n                      sx={{ mb: 2 }}\n                    />\n                  </>\n                )}\n\n                {authMethod === 1 && (\n                  <TextField\n                    fullWidth\n                    label=\"Número de teléfono\"\n                    placeholder=\"5512345678\"\n                    value={formData.phone}\n                    onChange={(e) => handleInputChange('phone', e.target.value)}\n                    error={!!fieldErrors.phone}\n                    helperText={fieldErrors.phone || 'Número de 10 dígitos'}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <Typography color=\"text.secondary\">+52</Typography>\n                        </InputAdornment>\n                      ),\n                    }}\n                    sx={{ mb: 2 }}\n                  />\n                )}\n\n                {/* Campos específicos por rol */}\n                {formData.role === 'worker' && (\n                  <TextField\n                    fullWidth\n                    label=\"Oficio principal\"\n                    placeholder=\"Ej: Mesero, Electricista, Traductor\"\n                    value={formData.trade}\n                    onChange={(e) => handleInputChange('trade', e.target.value)}\n                    error={!!fieldErrors.trade}\n                    helperText={fieldErrors.trade}\n                    sx={{ mb: 2 }}\n                  />\n                )}\n\n                {formData.role === 'employer' && (\n                  <>\n                    <TextField\n                      fullWidth\n                      label=\"Nombre de la empresa\"\n                      value={formData.companyName}\n                      onChange={(e) => handleInputChange('companyName', e.target.value)}\n                      error={!!fieldErrors.companyName}\n                      helperText={fieldErrors.companyName}\n                      sx={{ mb: 2 }}\n                    />\n                    <TextField\n                      fullWidth\n                      label=\"Tipo de negocio\"\n                      placeholder=\"Ej: Restaurante, Construcción, Hotel\"\n                      value={formData.businessType}\n                      onChange={(e) => handleInputChange('businessType', e.target.value)}\n                      sx={{ mb: 2 }}\n                    />\n                  </>\n                )}\n\n                <TextField\n                  fullWidth\n                  label=\"Ubicación\"\n                  value={formData.location}\n                  onChange={(e) => handleInputChange('location', e.target.value)}\n                  sx={{ mb: 3 }}\n                />\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={formData.acceptTerms}\n                      onChange={(e) => handleInputChange('acceptTerms', e.target.checked)}\n                      color=\"primary\"\n                    />\n                  }\n                  label={\n                    <Typography variant=\"body2\">\n                      Acepto los{' '}\n                      <Link to=\"/terms\" target=\"_blank\">\n                        términos y condiciones\n                      </Link>\n                      {' '}y la{' '}\n                      <Link to=\"/privacy\" target=\"_blank\">\n                        política de privacidad\n                      </Link>\n                    </Typography>\n                  }\n                />\n                {fieldErrors.acceptTerms && (\n                  <FormHelperText error>{fieldErrors.acceptTerms}</FormHelperText>\n                )}\n              </Box>\n            </Box>\n          )}\n\n          {/* Step 3: Verificación */}\n          {activeStep === 3 && (\n            <Box sx={{ textAlign: 'center', py: 4 }}>\n              {authMethod === 1 && !confirmationResult ? (\n                <CircularProgress size={60} />\n              ) : authMethod === 1 ? (\n                <>\n                  <Typography variant=\"h6\" gutterBottom>\n                    Verifica tu número\n                  </Typography>\n                  <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 3 }}>\n                    Enviamos un código de 6 dígitos a +52{formData.phone}\n                  </Typography>\n                  \n                  <TextField\n                    label=\"Código de verificación\"\n                    placeholder=\"123456\"\n                    value={verificationCode}\n                    onChange={(e) => setVerificationCode(e.target.value)}\n                    disabled={loading}\n                    sx={{ mb: 3, minWidth: 200 }}\n                  />\n                  \n                  <Box>\n                    <Button\n                      variant=\"contained\"\n                      size=\"large\"\n                      onClick={handleVerifyCode}\n                      disabled={loading || verificationCode.length < 6}\n                    >\n                      {loading ? <CircularProgress size={24} /> : 'Verificar'}\n                    </Button>\n                  </Box>\n                </>\n              ) : (\n                <>\n                  <Check sx={{ fontSize: 80, color: 'success.main', mb: 2 }} />\n                  <Typography variant=\"h5\" gutterBottom fontWeight=\"bold\">\n                    ¡Registro exitoso!\n                  </Typography>\n                  <Typography variant=\"body1\" color=\"text.secondary\">\n                    Bienvenido a DOOM. Redirigiendo...\n                  </Typography>\n                  <CircularProgress sx={{ mt: 3 }} />\n                </>\n              )}\n            </Box>\n          )}\n\n          {/* Botones de navegación */}\n          {activeStep < 3 && (\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 4 }}>\n              <Button\n                onClick={handleBack}\n                disabled={activeStep === 0 || loading}\n                startIcon={<ArrowBack />}\n              >\n                Atrás\n              </Button>\n              \n              {activeStep < 2 ? (\n                <Button\n                  variant=\"contained\"\n                  onClick={handleNext}\n                  disabled={loading || (activeStep === 0 && authMethod === 2)}\n                >\n                  Siguiente\n                </Button>\n              ) : (\n                <Button\n                  variant=\"contained\"\n                  onClick={handleNext}\n                  disabled={loading || !formData.acceptTerms}\n                >\n                  {loading ? <CircularProgress size={24} /> : 'Registrarme'}\n                </Button>\n              )}\n            </Box>\n          )}\n\n          <Divider sx={{ my: 3 }} />\n\n          <Box sx={{ textAlign: 'center' }}>\n            <Typography variant=\"body2\">\n              ¿Ya tienes cuenta?{' '}\n              <Link to=\"/login\" style={{ textDecoration: 'none' }}>\n                <Typography component=\"span\" color=\"primary\" fontWeight=\"bold\">\n                  Inicia sesión aquí\n                </Typography>\n              </Link>\n            </Typography>\n          </Box>\n        </Paper>\n      </Box>\n\n      {/* Hidden reCAPTCHA container */}\n      <div id=\"register-recaptcha-container\"></div>\n    </Container>\n  );\n};\n\nexport default RegisterEnhanced;"],"names":["RegisterEnhanced","navigate","useNavigate","register","useAuth","activeStep","setActiveStep","useState","steps","authMethod","setAuthMethod","formData","setFormData","fullName","email","phone","password","confirmPassword","role","trade","experience","companyName","businessType","location","acceptTerms","verificationCode","setVerificationCode","confirmationResult","setConfirmationResult","recaptchaVerifier","setRecaptchaVerifier","showPassword","setShowPassword","error","setError","loading","setLoading","fieldErrors","setFieldErrors","useEffect","verifier","setupRecaptcha","validateField","field","value","length","test","handleInputChange","prev","_objectSpread","handleNext","async","validateCurrentStep","isValid","errors","forEach","handleEmailRegister","handlePhoneRegister","userCredential","createUserWithEmailAndPassword","auth","updateProfile","user","displayName","createUserProfile","uid","setTimeout","code","message","formattedPhone","startsWith","replace","Error","confirmation","signInWithPhone","additionalData","userData","id","photoURL","createdAt","Date","updatedAt","setDoc","doc","db","userId","name","certifications","rating","totalRatings","available","contactName","_jsxs","Container","maxWidth","children","_jsx","Box","sx","mt","mb","Paper","elevation","p","Typography","variant","align","gutterBottom","fontWeight","color","Stepper","map","label","Step","StepLabel","Alert","severity","onClose","display","flexDirection","gap","cursor","border","borderColor","transition","onClick","alignItems","EmailIcon","PhoneIcon","result","signInWithGoogle","handleGoogleRegister","GoogleIcon","FormControl","component","width","RadioGroup","onChange","e","target","FormControlLabel","control","Radio","Person","Business","TextField","fullWidth","helperText","_Fragment","type","InputProps","endAdornment","InputAdornment","position","IconButton","edge","VisibilityOff","Visibility","placeholder","startAdornment","Checkbox","checked","Link","to","FormHelperText","textAlign","py","disabled","minWidth","Button","size","confirm","CircularProgress","Check","fontSize","justifyContent","handleBack","startIcon","ArrowBack","Divider","my","style","textDecoration"],"sourceRoot":""}