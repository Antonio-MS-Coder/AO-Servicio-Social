{"version":3,"file":"static/js/1743.affa8edc.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Upload.js","pages/Profile.tsx","../node_modules/@mui/icons-material/esm/PhotoCamera.js","types/index.ts","../node_modules/@mui/icons-material/esm/Save.js","../node_modules/@mui/icons-material/esm/CheckCircle.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 20h14v-2H5zm0-10h4v6h6v-6h4l-7-7z\"\n}), 'Upload');","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Container,\n  Paper,\n  TextField,\n  Button,\n  Typography,\n  Box,\n  MenuItem,\n  Switch,\n  FormControlLabel,\n  Avatar,\n  IconButton,\n  Chip,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  CircularProgress,\n  Alert\n} from '@mui/material';\nimport { Grid } from '@mui/material';\nimport {\n  PhotoCamera,\n  Upload,\n  Delete,\n  Save,\n  CheckCircle\n} from '@mui/icons-material';\nimport { doc, getDoc, updateDoc } from 'firebase/firestore';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { db, storage } from '../config/firebase';\nimport { useAuth } from '../contexts/AuthContext';\nimport { WorkerProfile, EmployerProfile, Trade, Certification } from '../types';\n\nconst Profile: React.FC = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { currentUser, userData } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);\n  \n  // Worker profile state\n  const [workerProfile, setWorkerProfile] = useState<Partial<WorkerProfile>>({\n    name: '',\n    trade: Trade.OTHER,\n    experience: 0,\n    location: '',\n    bio: '',\n    available: true,\n    certifications: []\n  });\n  \n  // Employer profile state\n  const [employerProfile, setEmployerProfile] = useState<Partial<EmployerProfile>>({\n    companyName: '',\n    contactName: '',\n    businessType: '',\n    location: '',\n    description: ''\n  });\n\n  useEffect(() => {\n    // Redirect workers to their dedicated profile page\n    if (userData?.role === 'worker') {\n      navigate('/worker-profile-edit');\n      return;\n    }\n    \n    if (currentUser) {\n      fetchProfile();\n    }\n  }, [currentUser, userData, navigate]);\n\n  const fetchProfile = async () => {\n    try {\n      const collectionName = userData?.role === 'worker' ? 'workers' : 'employers';\n      const profileDoc = await getDoc(doc(db, collectionName, currentUser!.uid));\n      \n      if (profileDoc.exists()) {\n        const profileData = profileDoc.data();\n        if (userData?.role === 'worker') {\n          setWorkerProfile(profileData as WorkerProfile);\n        } else {\n          setEmployerProfile(profileData as EmployerProfile);\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching profile:', error);\n      setMessage({ type: 'error', text: 'Error al cargar el perfil' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePhotoUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files && event.target.files[0]) {\n      const file = event.target.files[0];\n      const storageRef = ref(storage, `profile-photos/${currentUser!.uid}`);\n      \n      try {\n        setSaving(true);\n        const snapshot = await uploadBytes(storageRef, file);\n        const photoURL = await getDownloadURL(snapshot.ref);\n        \n        if (userData?.role === 'worker') {\n          setWorkerProfile({ ...workerProfile, photoUrl: photoURL });\n        } else {\n          setEmployerProfile({ ...employerProfile, logoUrl: photoURL });\n        }\n        \n        setMessage({ type: 'success', text: 'Foto actualizada' });\n      } catch (error) {\n        console.error('Error uploading photo:', error);\n        setMessage({ type: 'error', text: 'Error al subir la foto' });\n      } finally {\n        setSaving(false);\n      }\n    }\n  };\n\n  const handleCertificationUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files && event.target.files[0] && userData?.role === 'worker') {\n      const file = event.target.files[0];\n      const certId = Date.now().toString();\n      const storageRef = ref(storage, `certifications/${currentUser!.uid}/${certId}`);\n      \n      try {\n        setSaving(true);\n        const snapshot = await uploadBytes(storageRef, file);\n        const fileUrl = await getDownloadURL(snapshot.ref);\n        \n        const newCert: Certification = {\n          id: certId,\n          name: file.name,\n          issuer: '',\n          issueDate: new Date(),\n          fileUrl: fileUrl,\n          verified: false\n        };\n        \n        const updatedCerts = [...(workerProfile.certifications || []), newCert];\n        setWorkerProfile({ ...workerProfile, certifications: updatedCerts });\n        \n        setMessage({ type: 'success', text: 'Certificación agregada' });\n      } catch (error) {\n        console.error('Error uploading certification:', error);\n        setMessage({ type: 'error', text: 'Error al subir la certificación' });\n      } finally {\n        setSaving(false);\n      }\n    }\n  };\n\n  const handleSave = async () => {\n    try {\n      setSaving(true);\n      const collectionName = userData?.role === 'worker' ? 'workers' : 'employers';\n      const profileData = userData?.role === 'worker' ? workerProfile : employerProfile;\n      \n      await updateDoc(doc(db, collectionName, currentUser!.uid), {\n        ...profileData,\n        updatedAt: new Date()\n      });\n      \n      setMessage({ type: 'success', text: t('messages.profileUpdated') });\n    } catch (error) {\n      console.error('Error saving profile:', error);\n      setMessage({ type: 'error', text: 'Error al guardar el perfil' });\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <Container maxWidth=\"md\" sx={{ py: 4, textAlign: 'center' }}>\n        <CircularProgress />\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"md\" sx={{ py: 4 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        {t('nav.profile')}\n      </Typography>\n\n      {message && (\n        <Alert severity={message.type} sx={{ mb: 2 }} onClose={() => setMessage(null)}>\n          {message.text}\n        </Alert>\n      )}\n\n      <Paper sx={{ p: 3, mb: 3 }}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={4} sx={{ textAlign: 'center' }}>\n            <Avatar\n              src={userData?.role === 'worker' ? workerProfile.photoUrl : employerProfile.logoUrl}\n              sx={{ width: 150, height: 150, mx: 'auto', mb: 2 }}\n            />\n            <input\n              accept=\"image/*\"\n              type=\"file\"\n              id=\"photo-upload\"\n              hidden\n              onChange={handlePhotoUpload}\n            />\n            <label htmlFor=\"photo-upload\">\n              <Button\n                variant=\"outlined\"\n                component=\"span\"\n                startIcon={<PhotoCamera />}\n                disabled={saving}\n              >\n                {t('profile.uploadPhoto')}\n              </Button>\n            </label>\n          </Grid>\n\n          <Grid item xs={12} md={8}>\n            {userData?.role === 'worker' ? (\n              <>\n                <TextField\n                  fullWidth\n                  label={t('profile.name')}\n                  value={workerProfile.name}\n                  onChange={(e) => setWorkerProfile({ ...workerProfile, name: e.target.value })}\n                  sx={{ mb: 2 }}\n                />\n                \n                <TextField\n                  fullWidth\n                  select\n                  label={t('profile.trade')}\n                  value={workerProfile.trade}\n                  onChange={(e) => setWorkerProfile({ ...workerProfile, trade: e.target.value as Trade })}\n                  sx={{ mb: 2 }}\n                >\n                  {Object.values(Trade).map((trade) => (\n                    <MenuItem key={trade} value={trade}>\n                      {t(`trades.${trade}`)}\n                    </MenuItem>\n                  ))}\n                </TextField>\n\n                <TextField\n                  fullWidth\n                  type=\"number\"\n                  label={t('profile.experience')}\n                  value={workerProfile.experience}\n                  onChange={(e) => setWorkerProfile({ ...workerProfile, experience: parseInt(e.target.value) })}\n                  sx={{ mb: 2 }}\n                />\n\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={workerProfile.available}\n                      onChange={(e) => setWorkerProfile({ ...workerProfile, available: e.target.checked })}\n                    />\n                  }\n                  label={workerProfile.available ? t('profile.available') : t('profile.notAvailable')}\n                  sx={{ mb: 2 }}\n                />\n              </>\n            ) : (\n              <>\n                <TextField\n                  fullWidth\n                  label=\"Nombre de la Empresa\"\n                  value={employerProfile.companyName}\n                  onChange={(e) => setEmployerProfile({ ...employerProfile, companyName: e.target.value })}\n                  sx={{ mb: 2 }}\n                />\n                \n                <TextField\n                  fullWidth\n                  label=\"Nombre del Contacto\"\n                  value={employerProfile.contactName}\n                  onChange={(e) => setEmployerProfile({ ...employerProfile, contactName: e.target.value })}\n                  sx={{ mb: 2 }}\n                />\n\n                <TextField\n                  fullWidth\n                  label=\"Tipo de Negocio\"\n                  value={employerProfile.businessType}\n                  onChange={(e) => setEmployerProfile({ ...employerProfile, businessType: e.target.value })}\n                  sx={{ mb: 2 }}\n                />\n              </>\n            )}\n\n            <TextField\n              fullWidth\n              label={t('profile.location')}\n              value={userData?.role === 'worker' ? workerProfile.location : employerProfile.location}\n              onChange={(e) => {\n                if (userData?.role === 'worker') {\n                  setWorkerProfile({ ...workerProfile, location: e.target.value });\n                } else {\n                  setEmployerProfile({ ...employerProfile, location: e.target.value });\n                }\n              }}\n              sx={{ mb: 2 }}\n            />\n\n            <TextField\n              fullWidth\n              multiline\n              rows={4}\n              label={t('profile.bio')}\n              value={userData?.role === 'worker' ? workerProfile.bio : employerProfile.description}\n              onChange={(e) => {\n                if (userData?.role === 'worker') {\n                  setWorkerProfile({ ...workerProfile, bio: e.target.value });\n                } else {\n                  setEmployerProfile({ ...employerProfile, description: e.target.value });\n                }\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      {userData?.role === 'worker' && (\n        <Paper sx={{ p: 3, mb: 3 }}>\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n            <Typography variant=\"h6\">\n              {t('profile.certifications')}\n            </Typography>\n            <input\n              accept=\".pdf,.jpg,.jpeg,.png\"\n              type=\"file\"\n              id=\"cert-upload\"\n              hidden\n              onChange={handleCertificationUpload}\n            />\n            <label htmlFor=\"cert-upload\">\n              <Button\n                variant=\"outlined\"\n                component=\"span\"\n                startIcon={<Upload />}\n                disabled={saving}\n              >\n                {t('profile.uploadCertification')}\n              </Button>\n            </label>\n          </Box>\n\n          <List>\n            {workerProfile.certifications?.map((cert) => (\n              <ListItem key={cert.id}>\n                <ListItemText\n                  primary={cert.name}\n                  secondary={cert.issuer || 'Sin emisor'}\n                />\n                {cert.verified && (\n                  <Chip\n                    icon={<CheckCircle />}\n                    label=\"Verificado\"\n                    color=\"success\"\n                    size=\"small\"\n                    sx={{ mr: 2 }}\n                  />\n                )}\n                <ListItemSecondaryAction>\n                  <IconButton edge=\"end\" aria-label=\"delete\">\n                    <Delete />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            ))}\n          </List>\n        </Paper>\n      )}\n\n      <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          startIcon={<Save />}\n          onClick={handleSave}\n          disabled={saving}\n        >\n          {saving ? <CircularProgress size={24} /> : t('actions.save')}\n        </Button>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Profile;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"3.2\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 2 7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5\"\n}, \"1\")], 'PhotoCamera');","// User types\nexport type UserRole = 'worker' | 'employer' | 'admin';\n\nexport interface User {\n  id: string;\n  email: string;\n  phone?: string;\n  displayName?: string;\n  photoURL?: string;\n  role: UserRole;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n// Worker profile\nexport interface WorkerProfile {\n  userId: string;\n  name: string;\n  trade: Trade;\n  secondaryTrades?: Trade[];\n  experience: number;\n  location: string;\n  bio?: string;\n  photoUrl?: string;\n  certifications: Certification[];\n  rating: number;\n  totalRatings: number;\n  available: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n// Employer profile\nexport interface EmployerProfile {\n  userId: string;\n  companyName: string;\n  contactName: string;\n  businessType: string;\n  location: string;\n  description?: string;\n  logoUrl?: string;\n  rating: number;\n  totalRatings: number;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n// Trade enum\nexport enum Trade {\n  WAITER = 'waiter',\n  COOK = 'cook',\n  BARTENDER = 'bartender',\n  CLEANER = 'cleaner',\n  SECURITY = 'security',\n  DRIVER = 'driver',\n  TRANSLATOR = 'translator',\n  GUIDE = 'guide',\n  ELECTRICIAN = 'electrician',\n  PLUMBER = 'plumber',\n  CARPENTER = 'carpenter',\n  PAINTER = 'painter',\n  GARDENER = 'gardener',\n  TECHNICIAN = 'technician',\n  OTHER = 'other'\n}\n\n// Certification\nexport interface Certification {\n  id: string;\n  name: string;\n  type?: string; // food_handling, first_aid, driver_license, etc.\n  issuer: string;\n  issueDate: Date;\n  expiryDate?: Date;\n  fileUrl?: string;\n  verified: boolean;\n}\n\n// Job posting\nexport interface JobPosting {\n  id: string;\n  employerId: string;\n  employerName: string;\n  title: string;\n  description: string;\n  trade: Trade;\n  salary: {\n    amount: number;\n    period: 'hour' | 'day' | 'week' | 'month' | 'project';\n  };\n  duration?: string;\n  location: string;\n  requirements?: string[];\n  status: 'open' | 'closed' | 'in_progress' | 'draft';\n  createdAt: Date;\n  updatedAt: Date;\n  applicants?: string[];\n}\n\n// Job application\nexport interface JobApplication {\n  id: string;\n  jobId: string;\n  workerId: string;\n  workerName: string;\n  workerPhoto?: string;\n  workerRating?: number;\n  workerExperience?: number;\n  workerTrade?: string;\n  coverLetter?: string;\n  status: 'pending' | 'accepted' | 'rejected';\n  appliedAt: Date | any;\n  updatedAt: Date | any;\n}\n\n// Rating\nexport interface Rating {\n  id: string;\n  fromUserId: string;\n  toUserId: string;\n  jobId: string;\n  score: number;\n  comment?: string;\n  createdAt: Date;\n}\n\n// Message\nexport interface Message {\n  id: string;\n  fromUserId: string;\n  toUserId: string;\n  content: string;\n  read: boolean;\n  createdAt: Date;\n}","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3m3-10H5V5h10z\"\n}), 'Save');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m-2 15-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8z\"\n}), 'CheckCircle');"],"names":["createSvgIcon","_jsx","d","Profile","_workerProfile$certif","t","useTranslation","navigate","useNavigate","currentUser","userData","useAuth","loading","setLoading","useState","saving","setSaving","message","setMessage","workerProfile","setWorkerProfile","name","trade","Trade","OTHER","experience","location","bio","available","certifications","employerProfile","setEmployerProfile","companyName","contactName","businessType","description","useEffect","role","fetchProfile","async","collectionName","profileDoc","getDoc","doc","db","uid","exists","profileData","data","error","console","type","text","Container","maxWidth","sx","py","textAlign","children","CircularProgress","_jsxs","Typography","variant","gutterBottom","Alert","severity","mb","onClose","Paper","p","Grid","container","spacing","item","xs","md","Avatar","src","photoUrl","logoUrl","width","height","mx","accept","id","hidden","onChange","event","target","files","file","storageRef","ref","storage","concat","snapshot","uploadBytes","photoURL","getDownloadURL","_objectSpread","htmlFor","Button","component","startIcon","PhotoCamera","disabled","_Fragment","TextField","fullWidth","label","value","e","select","Object","values","map","MenuItem","parseInt","FormControlLabel","control","Switch","checked","multiline","rows","Box","display","justifyContent","alignItems","certId","Date","now","toString","fileUrl","newCert","issuer","issueDate","verified","updatedCerts","Upload","List","cert","ListItem","ListItemText","primary","secondary","Chip","icon","CheckCircle","color","size","mr","ListItemSecondaryAction","IconButton","edge","Delete","Save","onClick","updateDoc","updatedAt","cx","cy","r"],"sourceRoot":""}