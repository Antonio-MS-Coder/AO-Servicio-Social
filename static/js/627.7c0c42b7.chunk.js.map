{"version":3,"file":"static/js/627.7c0c42b7.chunk.js","mappings":"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","sources":["components/auth/LoginEnhanced.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Container,\n  Paper,\n  TextField,\n  Button,\n  Typography,\n  Box,\n  Alert,\n  CircularProgress,\n  Divider,\n  Tab,\n  Tabs,\n  InputAdornment,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions\n} from '@mui/material';\nimport {\n  Google as GoogleIcon,\n  Phone as PhoneIcon,\n  Email as EmailIcon,\n  Visibility,\n  VisibilityOff,\n  ArrowBack\n} from '@mui/icons-material';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { signInWithGoogle, setupRecaptcha, signInWithPhone } from '../../config/firebase';\nimport { doc, getDoc, setDoc } from 'firebase/firestore';\nimport { db } from '../../config/firebase';\nimport { RecaptchaVerifier, ConfirmationResult } from 'firebase/auth';\nimport { User, UserRole } from '../../types';\n\nconst LoginEnhanced: React.FC = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { login, currentUser } = useAuth();\n  \n  // Tab state\n  const [authMethod, setAuthMethod] = useState(0); // 0: Email, 1: Phone\n  \n  // Email login state\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  \n  // Phone login state\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [verificationCode, setVerificationCode] = useState('');\n  const [confirmationResult, setConfirmationResult] = useState<ConfirmationResult | null>(null);\n  const [recaptchaVerifier, setRecaptchaVerifier] = useState<RecaptchaVerifier | null>(null);\n  \n  // Role selection dialog\n  const [showRoleDialog, setShowRoleDialog] = useState(false);\n  const [pendingUser, setPendingUser] = useState<any>(null);\n  \n  // General state\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [step, setStep] = useState<'input' | 'verify'>('input');\n\n  useEffect(() => {\n    // Setup reCAPTCHA when component mounts\n    if (!recaptchaVerifier) {\n      const verifier = setupRecaptcha('recaptcha-container');\n      setRecaptchaVerifier(verifier);\n    }\n  }, [recaptchaVerifier]);\n\n  // Handle email login\n  const handleEmailLogin = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    try {\n      setError('');\n      setLoading(true);\n      await login(email, password);\n      navigate('/dashboard');\n    } catch (error: any) {\n      if (error.code === 'auth/user-not-found') {\n        setError('Usuario no encontrado. Por favor regístrate primero.');\n      } else if (error.code === 'auth/wrong-password') {\n        setError('Contraseña incorrecta.');\n      } else {\n        setError(error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle Google login\n  const handleGoogleLogin = async () => {\n    try {\n      setError('');\n      setLoading(true);\n      \n      const result = await signInWithGoogle();\n      const user = result.user;\n      \n      // Check if user profile exists\n      const userDoc = await getDoc(doc(db, 'users', user.uid));\n      \n      if (!userDoc.exists()) {\n        // New user, ask for role\n        setPendingUser(user);\n        setShowRoleDialog(true);\n      } else {\n        // Existing user, redirect to dashboard\n        navigate('/dashboard');\n      }\n    } catch (error: any) {\n      if (error.code === 'auth/popup-closed-by-user') {\n        setError('Inicio de sesión cancelado.');\n      } else {\n        setError(error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle phone number submission\n  const handlePhoneSubmit = async () => {\n    try {\n      setError('');\n      setLoading(true);\n      \n      // Format phone number for Mexico (+52)\n      let formattedPhone = phoneNumber;\n      if (!formattedPhone.startsWith('+')) {\n        if (formattedPhone.startsWith('52')) {\n          formattedPhone = '+' + formattedPhone;\n        } else {\n          formattedPhone = '+52' + formattedPhone;\n        }\n      }\n      \n      if (!recaptchaVerifier) {\n        throw new Error('reCAPTCHA no está configurado');\n      }\n      \n      const confirmation = await signInWithPhone(formattedPhone, recaptchaVerifier);\n      setConfirmationResult(confirmation);\n      setStep('verify');\n      \n    } catch (error: any) {\n      if (error.code === 'auth/invalid-phone-number') {\n        setError('Número de teléfono inválido. Usa formato: 5512345678');\n      } else if (error.code === 'auth/too-many-requests') {\n        setError('Demasiados intentos. Por favor intenta más tarde.');\n      } else {\n        setError(error.message);\n      }\n      \n      // Reset reCAPTCHA\n      const verifier = setupRecaptcha('recaptcha-container');\n      setRecaptchaVerifier(verifier);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle verification code submission\n  const handleVerifyCode = async () => {\n    try {\n      setError('');\n      setLoading(true);\n      \n      if (!confirmationResult) {\n        throw new Error('No hay verificación pendiente');\n      }\n      \n      const result = await confirmationResult.confirm(verificationCode);\n      const user = result.user;\n      \n      // Check if user profile exists\n      const userDoc = await getDoc(doc(db, 'users', user.uid));\n      \n      if (!userDoc.exists()) {\n        // New user, ask for role\n        setPendingUser(user);\n        setShowRoleDialog(true);\n      } else {\n        // Existing user, redirect to dashboard\n        navigate('/dashboard');\n      }\n    } catch (error: any) {\n      if (error.code === 'auth/invalid-verification-code') {\n        setError('Código de verificación incorrecto.');\n      } else {\n        setError(error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle role selection for new users\n  const handleRoleSelection = async (role: UserRole) => {\n    try {\n      setLoading(true);\n      \n      if (!pendingUser) return;\n      \n      // Create user document\n      const userData: User = {\n        id: pendingUser.uid,\n        email: pendingUser.email || '',\n        phone: pendingUser.phoneNumber || '',\n        displayName: pendingUser.displayName || '',\n        photoURL: pendingUser.photoURL || '',\n        role: role,\n        createdAt: new Date(),\n        updatedAt: new Date()\n      };\n      \n      await setDoc(doc(db, 'users', pendingUser.uid), userData);\n      \n      // Create profile document based on role\n      if (role === 'worker') {\n        await setDoc(doc(db, 'workers', pendingUser.uid), {\n          userId: pendingUser.uid,\n          name: pendingUser.displayName || '',\n          phone: pendingUser.phoneNumber || '',\n          trade: '',\n          experience: 0,\n          location: 'Álvaro Obregón',\n          certifications: [],\n          rating: 0,\n          totalRatings: 0,\n          available: true,\n          createdAt: new Date(),\n          updatedAt: new Date()\n        });\n      } else {\n        await setDoc(doc(db, 'employers', pendingUser.uid), {\n          userId: pendingUser.uid,\n          companyName: '',\n          contactName: pendingUser.displayName || '',\n          phone: pendingUser.phoneNumber || '',\n          businessType: '',\n          location: 'Álvaro Obregón',\n          rating: 0,\n          totalRatings: 0,\n          createdAt: new Date(),\n          updatedAt: new Date()\n        });\n      }\n      \n      setShowRoleDialog(false);\n      navigate('/onboarding');\n    } catch (error: any) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box sx={{ mt: 8, mb: 4 }}>\n        <Paper elevation={3} sx={{ p: 4 }}>\n          <Typography variant=\"h4\" align=\"center\" gutterBottom fontWeight=\"bold\">\n            Bienvenido a DOOM\n          </Typography>\n          \n          <Typography variant=\"body1\" align=\"center\" color=\"text.secondary\" gutterBottom sx={{ mb: 3 }}>\n            Conectando talento con oportunidades para el Mundial 2026\n          </Typography>\n\n          {error && (\n            <Alert severity=\"error\" sx={{ mb: 2 }} onClose={() => setError('')}>\n              {error}\n            </Alert>\n          )}\n\n          <Tabs value={authMethod} onChange={(_, v) => setAuthMethod(v)} centered sx={{ mb: 3 }}>\n            <Tab icon={<EmailIcon />} label=\"Email\" />\n            <Tab icon={<PhoneIcon />} label=\"Teléfono\" />\n          </Tabs>\n\n          {/* Email Login */}\n          {authMethod === 0 && (\n            <Box>\n              <form onSubmit={handleEmailLogin}>\n                <TextField\n                  fullWidth\n                  label=\"Correo electrónico\"\n                  type=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  required\n                  disabled={loading}\n                  sx={{ mb: 2 }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <EmailIcon color=\"action\" />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n\n                <TextField\n                  fullWidth\n                  label=\"Contraseña\"\n                  type={showPassword ? 'text' : 'password'}\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                  disabled={loading}\n                  sx={{ mb: 2 }}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          onClick={() => setShowPassword(!showPassword)}\n                          edge=\"end\"\n                        >\n                          {showPassword ? <VisibilityOff /> : <Visibility />}\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  size=\"large\"\n                  disabled={loading}\n                  sx={{ mb: 2 }}\n                >\n                  {loading ? (\n                    <CircularProgress size={24} color=\"inherit\" />\n                  ) : (\n                    'Iniciar Sesión'\n                  )}\n                </Button>\n              </form>\n\n              <Box sx={{ textAlign: 'center', mb: 2 }}>\n                <Link to=\"/forgot-password\" style={{ textDecoration: 'none' }}>\n                  <Typography variant=\"body2\" color=\"primary\">\n                    ¿Olvidaste tu contraseña?\n                  </Typography>\n                </Link>\n              </Box>\n            </Box>\n          )}\n\n          {/* Phone Login */}\n          {authMethod === 1 && (\n            <Box>\n              {step === 'input' ? (\n                <>\n                  <TextField\n                    fullWidth\n                    label=\"Número de teléfono\"\n                    placeholder=\"5512345678\"\n                    value={phoneNumber}\n                    onChange={(e) => setPhoneNumber(e.target.value)}\n                    disabled={loading}\n                    sx={{ mb: 2 }}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <Typography color=\"text.secondary\">+52</Typography>\n                        </InputAdornment>\n                      ),\n                    }}\n                    helperText=\"Ingresa tu número de 10 dígitos\"\n                  />\n\n                  <Button\n                    fullWidth\n                    variant=\"contained\"\n                    size=\"large\"\n                    onClick={handlePhoneSubmit}\n                    disabled={loading || phoneNumber.length < 10}\n                    sx={{ mb: 2 }}\n                  >\n                    {loading ? (\n                      <CircularProgress size={24} color=\"inherit\" />\n                    ) : (\n                      'Enviar código'\n                    )}\n                  </Button>\n                </>\n              ) : (\n                <>\n                  <Button\n                    startIcon={<ArrowBack />}\n                    onClick={() => {\n                      setStep('input');\n                      setVerificationCode('');\n                    }}\n                    sx={{ mb: 2 }}\n                  >\n                    Cambiar número\n                  </Button>\n\n                  <TextField\n                    fullWidth\n                    label=\"Código de verificación\"\n                    placeholder=\"123456\"\n                    value={verificationCode}\n                    onChange={(e) => setVerificationCode(e.target.value)}\n                    disabled={loading}\n                    sx={{ mb: 2 }}\n                    helperText=\"Ingresa el código de 6 dígitos enviado a tu teléfono\"\n                  />\n\n                  <Button\n                    fullWidth\n                    variant=\"contained\"\n                    size=\"large\"\n                    onClick={handleVerifyCode}\n                    disabled={loading || verificationCode.length < 6}\n                    sx={{ mb: 2 }}\n                  >\n                    {loading ? (\n                      <CircularProgress size={24} color=\"inherit\" />\n                    ) : (\n                      'Verificar'\n                    )}\n                  </Button>\n                </>\n              )}\n            </Box>\n          )}\n\n          <Divider sx={{ my: 3 }}>O</Divider>\n\n          {/* Google Sign In */}\n          <Button\n            fullWidth\n            variant=\"outlined\"\n            size=\"large\"\n            startIcon={<GoogleIcon />}\n            onClick={handleGoogleLogin}\n            disabled={loading}\n            sx={{ \n              mb: 2,\n              borderColor: '#4285f4',\n              color: '#4285f4',\n              '&:hover': {\n                borderColor: '#357ae8',\n                backgroundColor: 'rgba(66, 133, 244, 0.04)'\n              }\n            }}\n          >\n            Continuar con Google\n          </Button>\n\n          <Box sx={{ textAlign: 'center', mt: 2 }}>\n            <Typography variant=\"body2\">\n              ¿No tienes cuenta?{' '}\n              <Link to=\"/register\" style={{ textDecoration: 'none' }}>\n                <Typography component=\"span\" color=\"primary\" fontWeight=\"bold\">\n                  Regístrate aquí\n                </Typography>\n              </Link>\n            </Typography>\n          </Box>\n        </Paper>\n      </Box>\n\n      {/* Hidden reCAPTCHA container */}\n      <div id=\"recaptcha-container\"></div>\n\n      {/* Role Selection Dialog */}\n      <Dialog open={showRoleDialog} maxWidth=\"sm\" fullWidth>\n        <DialogTitle>\n          <Typography variant=\"h5\" fontWeight=\"bold\">\n            ¿Cómo quieres usar DOOM?\n          </Typography>\n        </DialogTitle>\n        <DialogContent>\n          <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 3 }}>\n            Selecciona tu perfil para personalizar tu experiencia\n          </Typography>\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n            <Paper\n              elevation={2}\n              sx={{\n                p: 3,\n                cursor: 'pointer',\n                border: '2px solid transparent',\n                '&:hover': {\n                  borderColor: 'primary.main',\n                  backgroundColor: 'action.hover'\n                }\n              }}\n              onClick={() => handleRoleSelection('worker')}\n            >\n              <Typography variant=\"h6\" fontWeight=\"bold\" color=\"primary\">\n                Soy Trabajador\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Busco oportunidades de empleo para el Mundial 2026\n              </Typography>\n            </Paper>\n            \n            <Paper\n              elevation={2}\n              sx={{\n                p: 3,\n                cursor: 'pointer',\n                border: '2px solid transparent',\n                '&:hover': {\n                  borderColor: 'secondary.main',\n                  backgroundColor: 'action.hover'\n                }\n              }}\n              onClick={() => handleRoleSelection('employer')}\n            >\n              <Typography variant=\"h6\" fontWeight=\"bold\" color=\"secondary\">\n                Soy Empleador\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Busco contratar trabajadores calificados\n              </Typography>\n            </Paper>\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setShowRoleDialog(false)} disabled={loading}>\n            Cancelar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n};\n\nexport default LoginEnhanced;"],"names":["LoginEnhanced","t","useTranslation","navigate","useNavigate","login","currentUser","useAuth","authMethod","setAuthMethod","useState","email","setEmail","password","setPassword","showPassword","setShowPassword","phoneNumber","setPhoneNumber","verificationCode","setVerificationCode","confirmationResult","setConfirmationResult","recaptchaVerifier","setRecaptchaVerifier","showRoleDialog","setShowRoleDialog","pendingUser","setPendingUser","error","setError","loading","setLoading","step","setStep","useEffect","verifier","setupRecaptcha","handleRoleSelection","async","userData","id","uid","phone","displayName","photoURL","role","createdAt","Date","updatedAt","setDoc","doc","db","userId","name","trade","experience","location","certifications","rating","totalRatings","available","companyName","contactName","businessType","message","_jsxs","Container","maxWidth","children","_jsx","Box","sx","mt","mb","Paper","elevation","p","Typography","variant","align","gutterBottom","fontWeight","color","Alert","severity","onClose","Tabs","value","onChange","_","v","centered","Tab","icon","EmailIcon","label","PhoneIcon","onSubmit","e","preventDefault","code","TextField","fullWidth","type","target","required","disabled","InputProps","startAdornment","InputAdornment","position","endAdornment","IconButton","onClick","edge","VisibilityOff","Visibility","Button","size","CircularProgress","textAlign","Link","to","style","textDecoration","_Fragment","placeholder","helperText","formattedPhone","startsWith","Error","confirmation","signInWithPhone","length","startIcon","ArrowBack","user","confirm","getDoc","exists","Divider","my","GoogleIcon","signInWithGoogle","borderColor","backgroundColor","component","Dialog","open","DialogTitle","DialogContent","display","flexDirection","gap","cursor","border","DialogActions"],"sourceRoot":""}