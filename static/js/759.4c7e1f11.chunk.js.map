{"version":3,"file":"static/js/759.4c7e1f11.chunk.js","mappings":"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","sources":["components/chat/ChatDialog.tsx","components/applications/ApplicationManager.tsx","pages/JobDetails.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Button,\n  Box,\n  Typography,\n  Avatar,\n  Paper,\n  IconButton,\n  Divider,\n  CircularProgress,\n  Chip\n} from '@mui/material';\nimport {\n  Send,\n  Close,\n  AttachFile,\n  CheckCircle,\n  Schedule\n} from '@mui/icons-material';\nimport { \n  collection, \n  query, \n  where, \n  orderBy, \n  onSnapshot, \n  addDoc, \n  serverTimestamp,\n  doc,\n  updateDoc,\n  getDocs,\n  limit\n} from 'firebase/firestore';\nimport { db } from '../../config/firebase';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { formatDistanceToNow } from 'date-fns';\nimport { es } from 'date-fns/locale';\n\ninterface ChatDialogProps {\n  open: boolean;\n  onClose: () => void;\n  recipientId: string;\n  recipientName: string;\n  recipientPhoto?: string;\n  jobId?: string;\n  jobTitle?: string;\n}\n\ninterface Message {\n  id: string;\n  senderId: string;\n  recipientId: string;\n  content: string;\n  timestamp: any;\n  read: boolean;\n  jobId?: string;\n}\n\nconst ChatDialog: React.FC<ChatDialogProps> = ({\n  open,\n  onClose,\n  recipientId,\n  recipientName,\n  recipientPhoto,\n  jobId,\n  jobTitle\n}) => {\n  const { currentUser } = useAuth();\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [sending, setSending] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!open || !currentUser) return;\n\n    setLoading(true);\n    \n    // Create conversation ID (sorted user IDs to ensure consistency)\n    const conversationId = [currentUser.uid, recipientId].sort().join('_');\n    \n    // Subscribe to messages\n    const q = query(\n      collection(db, 'messages'),\n      where('conversationId', '==', conversationId),\n      orderBy('timestamp', 'asc')\n    );\n\n    const unsubscribe = onSnapshot(q, (snapshot) => {\n      const messageList: Message[] = [];\n      snapshot.forEach((doc) => {\n        messageList.push({ id: doc.id, ...doc.data() } as Message);\n      });\n      setMessages(messageList);\n      setLoading(false);\n      \n      // Mark messages as read\n      markMessagesAsRead();\n    });\n\n    return () => unsubscribe();\n  }, [open, currentUser, recipientId]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const markMessagesAsRead = async () => {\n    if (!currentUser) return;\n    \n    const unreadQuery = query(\n      collection(db, 'messages'),\n      where('recipientId', '==', currentUser.uid),\n      where('senderId', '==', recipientId),\n      where('read', '==', false)\n    );\n\n    const snapshot = await getDocs(unreadQuery);\n    snapshot.forEach(async (document) => {\n      await updateDoc(doc(db, 'messages', document.id), { read: true });\n    });\n  };\n\n  const handleSendMessage = async () => {\n    if (!newMessage.trim() || !currentUser || sending) return;\n\n    setSending(true);\n    try {\n      const conversationId = [currentUser.uid, recipientId].sort().join('_');\n      \n      await addDoc(collection(db, 'messages'), {\n        conversationId,\n        senderId: currentUser.uid,\n        recipientId,\n        content: newMessage.trim(),\n        timestamp: serverTimestamp(),\n        read: false,\n        jobId: jobId || null\n      });\n\n      // Also create/update conversation document for easy listing\n      await addDoc(collection(db, 'conversations'), {\n        participants: [currentUser.uid, recipientId],\n        lastMessage: newMessage.trim(),\n        lastMessageTime: serverTimestamp(),\n        jobId: jobId || null,\n        jobTitle: jobTitle || null\n      });\n\n      setNewMessage('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n    } finally {\n      setSending(false);\n    }\n  };\n\n  const formatMessageTime = (timestamp: any) => {\n    if (!timestamp) return '';\n    const date = timestamp.toDate ? timestamp.toDate() : new Date(timestamp);\n    return formatDistanceToNow(date, { addSuffix: true, locale: es });\n  };\n\n  return (\n    <Dialog \n      open={open} \n      onClose={onClose}\n      maxWidth=\"sm\"\n      fullWidth\n      PaperProps={{\n        sx: { height: '70vh', display: 'flex', flexDirection: 'column' }\n      }}\n    >\n      <DialogTitle sx={{ borderBottom: 1, borderColor: 'divider' }}>\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Box display=\"flex\" alignItems=\"center\" gap={2}>\n            <Avatar src={recipientPhoto} alt={recipientName}>\n              {recipientName[0]}\n            </Avatar>\n            <Box>\n              <Typography variant=\"h6\">{recipientName}</Typography>\n              {jobTitle && (\n                <Typography variant=\"caption\" color=\"text.secondary\">\n                  {jobTitle}\n                </Typography>\n              )}\n            </Box>\n          </Box>\n          <IconButton onClick={onClose}>\n            <Close />\n          </IconButton>\n        </Box>\n      </DialogTitle>\n\n      <DialogContent sx={{ flex: 1, overflow: 'auto', p: 2 }}>\n        {loading ? (\n          <Box display=\"flex\" justifyContent=\"center\" p={4}>\n            <CircularProgress />\n          </Box>\n        ) : messages.length === 0 ? (\n          <Box textAlign=\"center\" p={4}>\n            <Typography color=\"text.secondary\">\n              Inicia la conversación con un mensaje\n            </Typography>\n          </Box>\n        ) : (\n          <Box>\n            {messages.map((message) => {\n              const isOwnMessage = message.senderId === currentUser?.uid;\n              return (\n                <Box\n                  key={message.id}\n                  display=\"flex\"\n                  justifyContent={isOwnMessage ? 'flex-end' : 'flex-start'}\n                  mb={2}\n                >\n                  <Paper\n                    elevation={1}\n                    sx={{\n                      p: 1.5,\n                      maxWidth: '70%',\n                      bgcolor: isOwnMessage ? 'primary.main' : 'grey.100',\n                      color: isOwnMessage ? 'white' : 'text.primary'\n                    }}\n                  >\n                    <Typography variant=\"body2\">{message.content}</Typography>\n                    <Box display=\"flex\" alignItems=\"center\" gap={0.5} mt={0.5}>\n                      <Typography \n                        variant=\"caption\" \n                        sx={{ \n                          opacity: 0.7,\n                          color: isOwnMessage ? 'white' : 'text.secondary'\n                        }}\n                      >\n                        {formatMessageTime(message.timestamp)}\n                      </Typography>\n                      {isOwnMessage && (\n                        message.read ? (\n                          <CheckCircle sx={{ fontSize: 14 }} />\n                        ) : (\n                          <Schedule sx={{ fontSize: 14 }} />\n                        )\n                      )}\n                    </Box>\n                  </Paper>\n                </Box>\n              );\n            })}\n            <div ref={messagesEndRef} />\n          </Box>\n        )}\n      </DialogContent>\n\n      <DialogActions sx={{ p: 2, borderTop: 1, borderColor: 'divider' }}>\n        <TextField\n          fullWidth\n          variant=\"outlined\"\n          placeholder=\"Escribe un mensaje...\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n          onKeyPress={(e) => {\n            if (e.key === 'Enter' && !e.shiftKey) {\n              e.preventDefault();\n              handleSendMessage();\n            }\n          }}\n          multiline\n          maxRows={3}\n          disabled={sending}\n          InputProps={{\n            endAdornment: (\n              <IconButton \n                onClick={handleSendMessage} \n                disabled={!newMessage.trim() || sending}\n                color=\"primary\"\n              >\n                <Send />\n              </IconButton>\n            )\n          }}\n        />\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ChatDialog;","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Button,\n  Box,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Avatar,\n  Chip,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  CircularProgress,\n  Alert,\n  Rating,\n  Divider,\n  Menu,\n  MenuItem,\n  Badge\n} from '@mui/material';\nimport {\n  Check,\n  Close,\n  Chat,\n  Star,\n  Schedule,\n  Work,\n  LocationOn,\n  AttachMoney,\n  MoreVert,\n  Person,\n  Email,\n  Phone,\n  Verified\n} from '@mui/icons-material';\nimport { \n  collection, \n  addDoc, \n  updateDoc, \n  doc, \n  getDocs, \n  query, \n  where,\n  serverTimestamp,\n  getDoc\n} from 'firebase/firestore';\nimport { db } from '../../config/firebase';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { JobApplication, JobPosting } from '../../types';\nimport ChatDialog from '../chat/ChatDialog';\n\ninterface ApplicationManagerProps {\n  jobId?: string;\n  workerId?: string;\n  mode: 'job' | 'worker' | 'dashboard';\n}\n\nconst ApplicationManager: React.FC<ApplicationManagerProps> = ({ \n  jobId, \n  workerId,\n  mode \n}) => {\n  const { t } = useTranslation();\n  const { currentUser, userData } = useAuth();\n  const [applications, setApplications] = useState<JobApplication[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [applyDialogOpen, setApplyDialogOpen] = useState(false);\n  const [coverLetter, setCoverLetter] = useState('');\n  const [applying, setApplying] = useState(false);\n  const [error, setError] = useState('');\n  const [selectedApplication, setSelectedApplication] = useState<JobApplication | null>(null);\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [chatOpen, setChatOpen] = useState(false);\n  const [chatRecipient, setChatRecipient] = useState<{id: string, name: string, photo?: string} | null>(null);\n  const [jobDetails, setJobDetails] = useState<JobPosting | null>(null);\n\n  useEffect(() => {\n    fetchApplications();\n    if (jobId) {\n      fetchJobDetails();\n    }\n  }, [jobId, workerId, currentUser]);\n\n  const fetchJobDetails = async () => {\n    if (!jobId) return;\n    try {\n      const jobDoc = await getDoc(doc(db, 'jobs', jobId));\n      if (jobDoc.exists()) {\n        setJobDetails({ id: jobDoc.id, ...jobDoc.data() } as JobPosting);\n      }\n    } catch (error) {\n      console.error('Error fetching job details:', error);\n    }\n  };\n\n  const fetchApplications = async () => {\n    if (!currentUser) return;\n    \n    setLoading(true);\n    try {\n      let q;\n      if (mode === 'job' && jobId) {\n        // Get applications for a specific job\n        q = query(collection(db, 'applications'), where('jobId', '==', jobId));\n      } else if (mode === 'worker' && workerId) {\n        // Get applications by a specific worker\n        q = query(collection(db, 'applications'), where('workerId', '==', workerId));\n      } else if (mode === 'dashboard') {\n        // Get all applications for current user\n        if (userData?.role === 'worker') {\n          q = query(collection(db, 'applications'), where('workerId', '==', currentUser.uid));\n        } else {\n          // For employers, get applications for their jobs\n          const jobsQuery = query(collection(db, 'jobs'), where('employerId', '==', currentUser.uid));\n          const jobsSnapshot = await getDocs(jobsQuery);\n          const jobIds = jobsSnapshot.docs.map(doc => doc.id);\n          \n          if (jobIds.length > 0) {\n            q = query(collection(db, 'applications'), where('jobId', 'in', jobIds));\n          } else {\n            setApplications([]);\n            setLoading(false);\n            return;\n          }\n        }\n      } else {\n        setApplications([]);\n        setLoading(false);\n        return;\n      }\n\n      const snapshot = await getDocs(q);\n      const apps: JobApplication[] = [];\n      \n      for (const docSnapshot of snapshot.docs) {\n        const data = docSnapshot.data();\n        \n        // Fetch worker details\n        const workerDoc = await getDoc(doc(db, 'workers', data.workerId));\n        const workerData = workerDoc.exists() ? workerDoc.data() : {};\n        \n        apps.push({\n          id: docSnapshot.id,\n          ...data,\n          workerName: workerData.name || data.workerName || 'Usuario',\n          workerPhoto: workerData.photoUrl,\n          workerRating: workerData.rating || 0,\n          workerExperience: workerData.experience || 0,\n          workerTrade: workerData.trade\n        } as JobApplication);\n      }\n      \n      setApplications(apps);\n    } catch (error) {\n      console.error('Error fetching applications:', error);\n      setError('Error al cargar las aplicaciones');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleApply = async () => {\n    if (!currentUser || !jobId) return;\n    \n    setApplying(true);\n    setError('');\n    \n    try {\n      // Check if already applied\n      const existingQuery = query(\n        collection(db, 'applications'),\n        where('jobId', '==', jobId),\n        where('workerId', '==', currentUser.uid)\n      );\n      const existingSnapshot = await getDocs(existingQuery);\n      \n      if (!existingSnapshot.empty) {\n        setError('Ya has aplicado a este trabajo');\n        return;\n      }\n\n      // Create application\n      await addDoc(collection(db, 'applications'), {\n        jobId,\n        workerId: currentUser.uid,\n        workerName: userData?.displayName || userData?.email || 'Trabajador',\n        coverLetter: coverLetter.trim(),\n        status: 'pending',\n        appliedAt: serverTimestamp(),\n        updatedAt: serverTimestamp()\n      });\n\n      // Update job's applicants count\n      const jobRef = doc(db, 'jobs', jobId);\n      const jobDoc = await getDoc(jobRef);\n      if (jobDoc.exists()) {\n        const currentApplicants = jobDoc.data().applicants || [];\n        await updateDoc(jobRef, {\n          applicants: [...currentApplicants, currentUser.uid]\n        });\n      }\n\n      setApplyDialogOpen(false);\n      setCoverLetter('');\n      fetchApplications();\n    } catch (error) {\n      console.error('Error applying to job:', error);\n      setError('Error al enviar la aplicación');\n    } finally {\n      setApplying(false);\n    }\n  };\n\n  const handleUpdateStatus = async (applicationId: string, newStatus: 'accepted' | 'rejected') => {\n    try {\n      await updateDoc(doc(db, 'applications', applicationId), {\n        status: newStatus,\n        updatedAt: serverTimestamp()\n      });\n      \n      fetchApplications();\n      setAnchorEl(null);\n    } catch (error) {\n      console.error('Error updating application status:', error);\n      setError('Error al actualizar el estado');\n    }\n  };\n\n  const handleOpenChat = (application: JobApplication) => {\n    setChatRecipient({\n      id: application.workerId,\n      name: application.workerName,\n      photo: application.workerPhoto\n    });\n    setChatOpen(true);\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'pending': return 'warning';\n      case 'accepted': return 'success';\n      case 'rejected': return 'error';\n      default: return 'default';\n    }\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'pending': return <Schedule />;\n      case 'accepted': return <Check />;\n      case 'rejected': return <Close />;\n      default: return <Schedule />;\n    }\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" p={4}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  const canApply = userData?.role === 'worker' && jobId && mode === 'job';\n  const canManage = userData?.role === 'employer';\n\n  return (\n    <Box>\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }} onClose={() => setError('')}>\n          {error}\n        </Alert>\n      )}\n\n      {canApply && (\n        <Box mb={3}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            startIcon={<Work />}\n            onClick={() => setApplyDialogOpen(true)}\n            fullWidth\n          >\n            Aplicar a este trabajo\n          </Button>\n        </Box>\n      )}\n\n      {applications.length === 0 ? (\n        <Card>\n          <CardContent>\n            <Typography variant=\"body1\" color=\"text.secondary\" textAlign=\"center\">\n              {mode === 'job' ? 'No hay aplicaciones para este trabajo aún' :\n               mode === 'worker' ? 'No has aplicado a ningún trabajo' :\n               'No hay aplicaciones'}\n            </Typography>\n          </CardContent>\n        </Card>\n      ) : (\n        <List>\n          {applications.map((application) => (\n            <Card key={application.id} sx={{ mb: 2 }}>\n              <ListItem>\n                <ListItemAvatar>\n                  <Badge\n                    overlap=\"circular\"\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n                    badgeContent={\n                      application.workerRating && application.workerRating > 0 ? (\n                        <Box display=\"flex\" alignItems=\"center\" sx={{ bgcolor: 'background.paper', borderRadius: 1, px: 0.5 }}>\n                          <Star sx={{ fontSize: 14, color: 'warning.main' }} />\n                          <Typography variant=\"caption\">{application.workerRating}</Typography>\n                        </Box>\n                      ) : undefined\n                    }\n                  >\n                    <Avatar src={application.workerPhoto} alt={application.workerName}>\n                      <Person />\n                    </Avatar>\n                  </Badge>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={\n                    <Box display=\"flex\" alignItems=\"center\" gap={1}>\n                      <Typography variant=\"subtitle1\" fontWeight=\"bold\">\n                        {application.workerName}\n                      </Typography>\n                      <Chip\n                        size=\"small\"\n                        label={t(`application.status.${application.status}`)}\n                        color={getStatusColor(application.status)}\n                        icon={getStatusIcon(application.status)}\n                      />\n                      {application.workerExperience && application.workerExperience > 0 && (\n                        <Chip\n                          size=\"small\"\n                          label={`${application.workerExperience} años exp.`}\n                          variant=\"outlined\"\n                        />\n                      )}\n                    </Box>\n                  }\n                  secondary={\n                    <Box>\n                      {application.coverLetter && (\n                        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n                          \"{application.coverLetter}\"\n                        </Typography>\n                      )}\n                      <Typography variant=\"caption\" color=\"text.secondary\">\n                        Aplicó: {new Date(application.appliedAt).toLocaleDateString('es-MX')}\n                      </Typography>\n                    </Box>\n                  }\n                />\n                <ListItemSecondaryAction>\n                  <Box display=\"flex\" gap={1}>\n                    <IconButton \n                      color=\"primary\"\n                      onClick={() => handleOpenChat(application)}\n                    >\n                      <Chat />\n                    </IconButton>\n                    {canManage && application.status === 'pending' && (\n                      <IconButton\n                        onClick={(e) => {\n                          setAnchorEl(e.currentTarget);\n                          setSelectedApplication(application);\n                        }}\n                      >\n                        <MoreVert />\n                      </IconButton>\n                    )}\n                  </Box>\n                </ListItemSecondaryAction>\n              </ListItem>\n            </Card>\n          ))}\n        </List>\n      )}\n\n      {/* Apply Dialog */}\n      <Dialog open={applyDialogOpen} onClose={() => setApplyDialogOpen(false)} maxWidth=\"sm\" fullWidth>\n        <DialogTitle>Aplicar al trabajo</DialogTitle>\n        <DialogContent>\n          <Box sx={{ pt: 2 }}>\n            {jobDetails && (\n              <Card sx={{ mb: 3, bgcolor: 'grey.50' }}>\n                <CardContent>\n                  <Typography variant=\"h6\" gutterBottom>{jobDetails.title}</Typography>\n                  <Box display=\"flex\" gap={2} flexWrap=\"wrap\">\n                    <Chip icon={<AttachMoney />} label={`$${jobDetails.salary.amount}/${jobDetails.salary.period}`} />\n                    <Chip icon={<LocationOn />} label={jobDetails.location} />\n                    {jobDetails.duration && <Chip icon={<Schedule />} label={jobDetails.duration} />}\n                  </Box>\n                </CardContent>\n              </Card>\n            )}\n            <TextField\n              fullWidth\n              multiline\n              rows={4}\n              label=\"Carta de presentación (opcional)\"\n              placeholder=\"Cuéntale al empleador por qué eres el candidato ideal...\"\n              value={coverLetter}\n              onChange={(e) => setCoverLetter(e.target.value)}\n              variant=\"outlined\"\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setApplyDialogOpen(false)}>Cancelar</Button>\n          <Button \n            onClick={handleApply} \n            variant=\"contained\" \n            disabled={applying}\n            startIcon={applying ? <CircularProgress size={20} /> : <Work />}\n          >\n            {applying ? 'Enviando...' : 'Enviar aplicación'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Status Menu */}\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={() => setAnchorEl(null)}\n      >\n        <MenuItem \n          onClick={() => selectedApplication && handleUpdateStatus(selectedApplication.id, 'accepted')}\n        >\n          <Check sx={{ mr: 1 }} /> Aceptar\n        </MenuItem>\n        <MenuItem \n          onClick={() => selectedApplication && handleUpdateStatus(selectedApplication.id, 'rejected')}\n        >\n          <Close sx={{ mr: 1 }} /> Rechazar\n        </MenuItem>\n      </Menu>\n\n      {/* Chat Dialog */}\n      {chatRecipient && (\n        <ChatDialog\n          open={chatOpen}\n          onClose={() => setChatOpen(false)}\n          recipientId={chatRecipient.id}\n          recipientName={chatRecipient.name}\n          recipientPhoto={chatRecipient.photo}\n          jobId={jobId}\n          jobTitle={jobDetails?.title}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default ApplicationManager;","import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Container,\n  Typography,\n  Paper,\n  Box,\n  Button,\n  Chip,\n  Avatar,\n  Divider,\n  CircularProgress,\n  Alert,\n  Card,\n  CardContent,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  IconButton,\n  Breadcrumbs,\n  Link\n} from '@mui/material';\nimport { Grid } from '@mui/material';\nimport {\n  LocationOn,\n  AttachMoney,\n  Schedule,\n  Work,\n  Person,\n  Business,\n  Star,\n  ArrowBack,\n  Share,\n  Bookmark,\n  BookmarkBorder,\n  CheckCircle,\n  Warning,\n  CalendarToday,\n  Group,\n  Verified\n} from '@mui/icons-material';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { db } from '../config/firebase';\nimport { useAuth } from '../contexts/AuthContext';\nimport { JobPosting, Trade } from '../types';\nimport ApplicationManager from '../components/applications/ApplicationManager';\nimport ChatDialog from '../components/chat/ChatDialog';\n\nconst JobDetails: React.FC = () => {\n  const { id } = useParams();\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { currentUser, userData } = useAuth();\n  \n  const [job, setJob] = useState<JobPosting | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [saved, setSaved] = useState(false);\n  const [chatOpen, setChatOpen] = useState(false);\n  const [employerData, setEmployerData] = useState<any>(null);\n\n  useEffect(() => {\n    if (id) {\n      fetchJobDetails();\n      checkIfSaved();\n    }\n  }, [id]);\n\n  const fetchJobDetails = async () => {\n    if (!id) return;\n    \n    setLoading(true);\n    try {\n      const jobDoc = await getDoc(doc(db, 'jobs', id));\n      \n      if (jobDoc.exists()) {\n        const jobData = { id: jobDoc.id, ...jobDoc.data() } as JobPosting;\n        setJob(jobData);\n        \n        // Fetch employer data\n        if (jobData.employerId) {\n          const employerDoc = await getDoc(doc(db, 'employers', jobData.employerId));\n          if (employerDoc.exists()) {\n            setEmployerData(employerDoc.data());\n          }\n        }\n      } else {\n        setError('Trabajo no encontrado');\n      }\n    } catch (error) {\n      console.error('Error fetching job details:', error);\n      setError('Error al cargar los detalles del trabajo');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const checkIfSaved = () => {\n    const savedJobs = localStorage.getItem('savedJobs');\n    if (savedJobs && id) {\n      const saved = JSON.parse(savedJobs);\n      setSaved(saved.includes(id));\n    }\n  };\n\n  const handleSaveJob = () => {\n    if (!id) return;\n    \n    const savedJobs = localStorage.getItem('savedJobs');\n    let saved = savedJobs ? JSON.parse(savedJobs) : [];\n    \n    if (saved.includes(id)) {\n      saved = saved.filter((jobId: string) => jobId !== id);\n      setSaved(false);\n    } else {\n      saved.push(id);\n      setSaved(true);\n    }\n    \n    localStorage.setItem('savedJobs', JSON.stringify(saved));\n  };\n\n  const handleShare = () => {\n    if (navigator.share && job) {\n      navigator.share({\n        title: job.title,\n        text: `${job.title} - ${job.location}`,\n        url: window.location.href,\n      });\n    } else {\n      // Fallback - copy to clipboard\n      navigator.clipboard.writeText(window.location.href);\n      // You could show a toast here\n    }\n  };\n\n  if (loading) {\n    return (\n      <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n        <Box display=\"flex\" justifyContent=\"center\">\n          <CircularProgress />\n        </Box>\n      </Container>\n    );\n  }\n\n  if (error || !job) {\n    return (\n      <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n        <Alert severity=\"error\">\n          {error || 'Trabajo no encontrado'}\n        </Alert>\n        <Button\n          startIcon={<ArrowBack />}\n          onClick={() => navigate('/jobs')}\n          sx={{ mt: 2 }}\n        >\n          Volver a trabajos\n        </Button>\n      </Container>\n    );\n  }\n\n  const isEmployer = userData?.role === 'employer';\n  const isOwner = job.employerId === currentUser?.uid;\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n      {/* Breadcrumbs */}\n      <Breadcrumbs sx={{ mb: 3 }}>\n        <Link\n          underline=\"hover\"\n          color=\"inherit\"\n          href=\"#\"\n          onClick={(e) => {\n            e.preventDefault();\n            navigate('/');\n          }}\n        >\n          Inicio\n        </Link>\n        <Link\n          underline=\"hover\"\n          color=\"inherit\"\n          href=\"#\"\n          onClick={(e) => {\n            e.preventDefault();\n            navigate('/jobs');\n          }}\n        >\n          Trabajos\n        </Link>\n        <Typography color=\"text.primary\">{job.title}</Typography>\n      </Breadcrumbs>\n\n      <Grid container spacing={3}>\n        {/* Main Content */}\n        <Grid item xs={12} md={8}>\n          {/* Job Header */}\n          <Paper sx={{ p: 4, mb: 3 }}>\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"start\" mb={3}>\n              <Box flex={1}>\n                <Typography variant=\"h4\" gutterBottom fontWeight=\"bold\">\n                  {job.title}\n                </Typography>\n                \n                <Box display=\"flex\" alignItems=\"center\" gap={2} mb={2}>\n                  <Chip\n                    icon={<Business />}\n                    label={job.employerName || 'Empresa'}\n                    variant=\"outlined\"\n                  />\n                  {employerData?.rating > 0 && (\n                    <Chip\n                      icon={<Star />}\n                      label={`${employerData.rating.toFixed(1)} (${employerData.totalRatings})`}\n                      color=\"warning\"\n                      variant=\"outlined\"\n                    />\n                  )}\n                  {employerData?.verified && (\n                    <Chip\n                      icon={<Verified />}\n                      label=\"Verificado\"\n                      color=\"success\"\n                      size=\"small\"\n                    />\n                  )}\n                </Box>\n\n                <Box display=\"flex\" gap={2} flexWrap=\"wrap\">\n                  <Chip\n                    icon={<LocationOn />}\n                    label={job.location}\n                    color=\"primary\"\n                  />\n                  <Chip\n                    icon={<AttachMoney />}\n                    label={`$${job.salary.amount} / ${t(`salary.${job.salary.period}`)}`}\n                    color=\"success\"\n                  />\n                  {job.duration && (\n                    <Chip\n                      icon={<Schedule />}\n                      label={job.duration}\n                    />\n                  )}\n                  <Chip\n                    icon={<Work />}\n                    label={t(`trades.${job.trade}`)}\n                  />\n                </Box>\n              </Box>\n\n              <Box display=\"flex\" gap={1}>\n                <IconButton onClick={handleSaveJob} color=\"primary\">\n                  {saved ? <Bookmark /> : <BookmarkBorder />}\n                </IconButton>\n                <IconButton onClick={handleShare}>\n                  <Share />\n                </IconButton>\n              </Box>\n            </Box>\n\n            <Divider sx={{ my: 3 }} />\n\n            {/* Job Description */}\n            <Box mb={3}>\n              <Typography variant=\"h6\" gutterBottom fontWeight=\"bold\">\n                Descripción del trabajo\n              </Typography>\n              <Typography variant=\"body1\" paragraph>\n                {job.description}\n              </Typography>\n            </Box>\n\n            {/* Requirements */}\n            {job.requirements && job.requirements.length > 0 && (\n              <Box mb={3}>\n                <Typography variant=\"h6\" gutterBottom fontWeight=\"bold\">\n                  Requisitos\n                </Typography>\n                <List dense>\n                  {job.requirements.map((req, index) => (\n                    <ListItem key={index}>\n                      <ListItemIcon>\n                        <CheckCircle color=\"primary\" fontSize=\"small\" />\n                      </ListItemIcon>\n                      <ListItemText primary={req} />\n                    </ListItem>\n                  ))}\n                </List>\n              </Box>\n            )}\n\n            {/* Job Status */}\n            <Box display=\"flex\" alignItems=\"center\" gap={2}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Estado:\n              </Typography>\n              <Chip\n                label={job.status === 'open' ? 'Abierto' : 'Cerrado'}\n                color={job.status === 'open' ? 'success' : 'default'}\n                size=\"small\"\n              />\n              {job.applicants && (\n                <Chip\n                  icon={<Group />}\n                  label={`${job.applicants.length} aplicantes`}\n                  size=\"small\"\n                  variant=\"outlined\"\n                />\n              )}\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Publicado: {new Date(job.createdAt).toLocaleDateString('es-MX')}\n              </Typography>\n            </Box>\n          </Paper>\n\n          {/* Applications Section */}\n          {(isOwner || !isEmployer) && (\n            <Paper sx={{ p: 4 }}>\n              <Typography variant=\"h6\" gutterBottom fontWeight=\"bold\">\n                {isOwner ? 'Aplicaciones recibidas' : 'Tu aplicación'}\n              </Typography>\n              <ApplicationManager\n                jobId={id}\n                mode=\"job\"\n              />\n            </Paper>\n          )}\n        </Grid>\n\n        {/* Sidebar */}\n        <Grid item xs={12} md={4}>\n          {/* Action Card */}\n          {!isEmployer && (\n            <Card sx={{ mb: 3, position: 'sticky', top: 20 }}>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  ¿Interesado en este trabajo?\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                  Aplica ahora y conecta directamente con el empleador\n                </Typography>\n                <ApplicationManager\n                  jobId={id}\n                  mode=\"job\"\n                />\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Employer Card */}\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Sobre el empleador\n              </Typography>\n              \n              <Box display=\"flex\" alignItems=\"center\" gap={2} mb={2}>\n                <Avatar src={employerData?.logoUrl} sx={{ width: 56, height: 56 }}>\n                  <Business />\n                </Avatar>\n                <Box>\n                  <Typography variant=\"subtitle1\" fontWeight=\"bold\">\n                    {job.employerName}\n                  </Typography>\n                  {employerData?.businessType && (\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {employerData.businessType}\n                    </Typography>\n                  )}\n                </Box>\n              </Box>\n\n              {employerData?.description && (\n                <Typography variant=\"body2\" paragraph>\n                  {employerData.description}\n                </Typography>\n              )}\n\n              {!isOwner && currentUser && (\n                <Button\n                  fullWidth\n                  variant=\"outlined\"\n                  startIcon={<Person />}\n                  onClick={() => setChatOpen(true)}\n                >\n                  Contactar empleador\n                </Button>\n              )}\n            </CardContent>\n          </Card>\n\n          {/* Safety Tips */}\n          <Card sx={{ mt: 3 }}>\n            <CardContent>\n              <Box display=\"flex\" alignItems=\"center\" gap={1} mb={2}>\n                <Warning color=\"warning\" />\n                <Typography variant=\"h6\">Consejos de seguridad</Typography>\n              </Box>\n              <List dense>\n                <ListItem>\n                  <ListItemText\n                    primary=\"Verifica la identidad del empleador\"\n                    primaryTypographyProps={{ variant: 'body2' }}\n                  />\n                </ListItem>\n                <ListItem>\n                  <ListItemText\n                    primary=\"Nunca pagues por adelantado\"\n                    primaryTypographyProps={{ variant: 'body2' }}\n                  />\n                </ListItem>\n                <ListItem>\n                  <ListItemText\n                    primary=\"Reúnete en lugares públicos\"\n                    primaryTypographyProps={{ variant: 'body2' }}\n                  />\n                </ListItem>\n                <ListItem>\n                  <ListItemText\n                    primary=\"Reporta actividades sospechosas\"\n                    primaryTypographyProps={{ variant: 'body2' }}\n                  />\n                </ListItem>\n              </List>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n\n      {/* Chat Dialog */}\n      {job && (\n        <ChatDialog\n          open={chatOpen}\n          onClose={() => setChatOpen(false)}\n          recipientId={job.employerId}\n          recipientName={job.employerName}\n          recipientPhoto={employerData?.logoUrl}\n          jobId={id}\n          jobTitle={job.title}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default JobDetails;"],"names":["_ref","open","onClose","recipientId","recipientName","recipientPhoto","jobId","jobTitle","currentUser","useAuth","messages","setMessages","useState","newMessage","setNewMessage","loading","setLoading","sending","setSending","messagesEndRef","useRef","useEffect","conversationId","uid","sort","join","q","query","collection","db","where","orderBy","unsubscribe","onSnapshot","snapshot","messageList","forEach","doc","push","_objectSpread","id","data","markMessagesAsRead","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","async","unreadQuery","getDocs","updateDoc","document","read","handleSendMessage","trim","addDoc","senderId","content","timestamp","serverTimestamp","participants","lastMessage","lastMessageTime","error","console","formatMessageTime","date","toDate","Date","formatDistanceToNow","addSuffix","locale","es","_jsxs","Dialog","maxWidth","fullWidth","PaperProps","sx","height","display","flexDirection","children","_jsx","DialogTitle","borderBottom","borderColor","Box","alignItems","justifyContent","gap","Avatar","src","alt","Typography","variant","color","IconButton","onClick","Close","DialogContent","flex","overflow","p","CircularProgress","length","textAlign","map","message","isOwnMessage","mb","Paper","elevation","bgcolor","mt","opacity","CheckCircle","fontSize","Schedule","ref","DialogActions","borderTop","TextField","placeholder","value","onChange","e","target","onKeyPress","key","shiftKey","preventDefault","multiline","maxRows","disabled","InputProps","endAdornment","Send","workerId","mode","t","useTranslation","userData","applications","setApplications","applyDialogOpen","setApplyDialogOpen","coverLetter","setCoverLetter","applying","setApplying","setError","selectedApplication","setSelectedApplication","anchorEl","setAnchorEl","chatOpen","setChatOpen","chatRecipient","setChatRecipient","jobDetails","setJobDetails","fetchApplications","fetchJobDetails","jobDoc","getDoc","exists","role","jobsQuery","jobIds","docs","apps","docSnapshot","workerDoc","workerData","workerName","name","workerPhoto","photoUrl","workerRating","rating","workerExperience","experience","workerTrade","trade","handleUpdateStatus","applicationId","newStatus","status","updatedAt","getStatusColor","getStatusIcon","Check","canApply","canManage","Alert","severity","Button","size","startIcon","Work","Card","CardContent","List","application","ListItem","ListItemAvatar","Badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","borderRadius","px","Star","undefined","Person","ListItemText","primary","fontWeight","Chip","label","concat","icon","secondary","appliedAt","toLocaleDateString","ListItemSecondaryAction","photo","handleOpenChat","Chat","currentTarget","MoreVert","pt","gutterBottom","title","flexWrap","AttachMoney","salary","amount","period","LocationOn","location","duration","rows","existingQuery","empty","displayName","email","jobRef","currentApplicants","applicants","Menu","Boolean","MenuItem","mr","ChatDialog","JobDetails","useParams","navigate","useNavigate","job","setJob","saved","setSaved","employerData","setEmployerData","checkIfSaved","jobData","employerId","employerDoc","savedJobs","localStorage","getItem","JSON","parse","includes","Container","py","ArrowBack","isEmployer","isOwner","Breadcrumbs","Link","underline","href","Grid","container","spacing","item","xs","md","Business","employerName","toFixed","totalRatings","verified","Verified","handleSaveJob","filter","setItem","stringify","Bookmark","BookmarkBorder","handleShare","navigator","share","text","url","window","clipboard","writeText","Share","Divider","my","paragraph","description","requirements","dense","req","index","ListItemIcon","Group","createdAt","ApplicationManager","position","top","logoUrl","width","businessType","Warning","primaryTypographyProps"],"sourceRoot":""}