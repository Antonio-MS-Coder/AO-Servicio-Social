{"version":3,"file":"static/js/876.d1e56304.chunk.js","mappings":"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","sources":["components/ui/TrustBadges.tsx","types/index.ts","components/ui/EmptyState.tsx","components/ui/SkeletonLoader.tsx","pages/Jobs.tsx"],"sourcesContent":["import React from 'react';\nimport { Box, Chip, Tooltip, Typography } from '@mui/material';\nimport {\n  Verified,\n  Shield,\n  Star,\n  CheckCircle,\n  WorkHistory,\n  Groups,\n  Gavel,\n  Security,\n  Badge,\n  LocalPolice,\n} from '@mui/icons-material';\n\ninterface BadgeProps {\n  type: 'verified' | 'trusted' | 'top-rated' | 'experienced' | 'certified' | 'premium' | 'official';\n  size?: 'small' | 'medium' | 'large';\n  showLabel?: boolean;\n}\n\nexport const TrustBadge: React.FC<BadgeProps> = ({ type, size = 'small', showLabel = false }) => {\n  const getBadgeConfig = () => {\n    switch (type) {\n      case 'verified':\n        return {\n          icon: <Verified />,\n          label: 'Verificado',\n          color: '#007A33',\n          tooltip: 'Identidad verificada con documento oficial',\n        };\n      case 'trusted':\n        return {\n          icon: <Shield />,\n          label: 'Confiable',\n          color: '#2196F3',\n          tooltip: 'Usuario con excelente reputación',\n        };\n      case 'top-rated':\n        return {\n          icon: <Star />,\n          label: 'Top',\n          color: '#FFC107',\n          tooltip: 'Calificación superior a 4.5 estrellas',\n        };\n      case 'experienced':\n        return {\n          icon: <WorkHistory />,\n          label: '5+ años',\n          color: '#9C27B0',\n          tooltip: 'Más de 5 años de experiencia',\n        };\n      case 'certified':\n        return {\n          icon: <Badge />,\n          label: 'Certificado',\n          color: '#FF5722',\n          tooltip: 'Certificaciones profesionales validadas',\n        };\n      case 'premium':\n        return {\n          icon: <LocalPolice />,\n          label: 'Premium',\n          color: '#F7991C',\n          tooltip: 'Miembro premium de DOOM',\n        };\n      case 'official':\n        return {\n          icon: <Gavel />,\n          label: 'Oficial',\n          color: '#007A33',\n          tooltip: 'Empresa verificada oficialmente',\n        };\n      default:\n        return {\n          icon: <CheckCircle />,\n          label: 'Verificado',\n          color: '#007A33',\n          tooltip: 'Verificado',\n        };\n    }\n  };\n\n  const config = getBadgeConfig();\n  const iconSize = size === 'small' ? 16 : size === 'medium' ? 20 : 24;\n\n  if (showLabel) {\n    return (\n      <Tooltip title={config.tooltip} arrow placement=\"top\">\n        <Chip\n          icon={React.cloneElement(config.icon, { sx: { fontSize: iconSize } })}\n          label={config.label}\n          size={size === 'large' ? 'medium' : size}\n          sx={{\n            backgroundColor: `${config.color}15`,\n            color: config.color,\n            borderColor: config.color,\n            fontWeight: 600,\n            '& .MuiChip-icon': {\n              color: config.color,\n            },\n          }}\n        />\n      </Tooltip>\n    );\n  }\n\n  return (\n    <Tooltip title={config.tooltip} arrow placement=\"top\">\n      <Box\n        component=\"span\"\n        sx={{\n          display: 'inline-flex',\n          color: config.color,\n          verticalAlign: 'middle',\n        }}\n      >\n        {React.cloneElement(config.icon, { sx: { fontSize: iconSize } })}\n      </Box>\n    </Tooltip>\n  );\n};\n\ninterface TrustIndicatorsProps {\n  verified?: boolean;\n  rating?: number;\n  totalRatings?: number;\n  experience?: number;\n  certifications?: number;\n  premium?: boolean;\n}\n\nexport const TrustIndicators: React.FC<TrustIndicatorsProps> = ({\n  verified,\n  rating,\n  totalRatings,\n  experience,\n  certifications,\n  premium,\n}) => {\n  const badges = [];\n\n  if (verified) badges.push('verified');\n  if (rating && rating >= 4.5 && totalRatings && totalRatings >= 10) badges.push('top-rated');\n  if (experience && experience >= 5) badges.push('experienced');\n  if (certifications && certifications > 0) badges.push('certified');\n  if (premium) badges.push('premium');\n  if (rating && rating >= 4.0 && totalRatings && totalRatings >= 5) badges.push('trusted');\n\n  if (badges.length === 0) return null;\n\n  return (\n    <Box sx={{ display: 'flex', gap: 0.5, alignItems: 'center', flexWrap: 'wrap' }}>\n      {badges.map((badge) => (\n        <TrustBadge key={badge} type={badge as any} size=\"small\" />\n      ))}\n    </Box>\n  );\n};\n\ninterface TrustSectionProps {\n  stats: {\n    verifiedUsers: number;\n    successfulJobs: number;\n    averageRating: number;\n    activeWorkers: number;\n  };\n}\n\nexport const TrustSection: React.FC<TrustSectionProps> = ({ stats }) => {\n  // Enhanced visual hierarchy - most important stat gets prominence\n  const getStatPriority = (statKey: string) => {\n    switch (statKey) {\n      case 'verifiedUsers': return 'primary'; // Highest priority\n      case 'averageRating': return 'secondary'; // Second priority  \n      case 'successfulJobs': return 'tertiary';\n      case 'activeWorkers': return 'tertiary';\n      default: return 'tertiary';\n    }\n  };\n\n  const getStatSize = (priority: string) => {\n    switch (priority) {\n      case 'primary': return { icon: 56, textVariant: 'h3' as const, minWidth: 140 };\n      case 'secondary': return { icon: 48, textVariant: 'h4' as const, minWidth: 120 };\n      default: return { icon: 44, textVariant: 'h4' as const, minWidth: 110 };\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: { xs: 2, md: 4 },\n        justifyContent: 'center',\n        alignItems: 'flex-start', // Better alignment\n        p: { xs: 4, md: 6 },\n        borderRadius: 4, // More modern border radius\n        background: {\n          xs: 'linear-gradient(135deg, rgba(0, 122, 51, 0.03) 0%, rgba(247, 153, 28, 0.03) 100%)',\n          md: 'linear-gradient(135deg, rgba(0, 122, 51, 0.06) 0%, rgba(247, 153, 28, 0.06) 100%)',\n        },\n        border: '1px solid',\n        borderColor: 'divider',\n        boxShadow: '0 8px 32px rgba(0,0,0,0.08)',\n        position: 'relative',\n        '&::before': {\n          content: '\"\"',\n          position: 'absolute',\n          top: 0,\n          left: '50%',\n          transform: 'translateX(-50%)',\n          width: 60,\n          height: 4,\n          borderRadius: 2,\n          background: 'linear-gradient(90deg, #007A33 0%, #f7991c 100%)',\n        },\n      }}\n    >\n      {/* Primary stat - Verified Users (highest priority) */}\n      {(() => {\n        const priority = getStatPriority('verifiedUsers');\n        const size = getStatSize(priority);\n        return (\n          <Box sx={{ \n            textAlign: 'center', \n            minWidth: size.minWidth,\n            position: 'relative',\n            '&::after': priority === 'primary' ? {\n              content: '\"\"',\n              position: 'absolute',\n              top: -10,\n              left: '50%',\n              transform: 'translateX(-50%)',\n              width: 8,\n              height: 8,\n              borderRadius: '50%',\n              bgcolor: 'primary.main',\n            } : {},\n          }}>\n            <Security sx={{ \n              fontSize: size.icon, \n              color: 'primary.main', \n              mb: 1.5,\n              filter: 'drop-shadow(0 2px 4px rgba(0,122,51,0.2))'\n            }} />\n            <Typography variant={size.textVariant} fontWeight=\"bold\" color=\"primary.main\" sx={{ mb: 0.5 }}>\n              {stats.verifiedUsers.toLocaleString()}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" fontWeight={500}>\n              Usuarios Verificados\n            </Typography>\n          </Box>\n        );\n      })()}\n\n      {/* Secondary stat - Average Rating */}\n      {(() => {\n        const priority = getStatPriority('averageRating');\n        const size = getStatSize(priority);\n        return (\n          <Box sx={{ textAlign: 'center', minWidth: size.minWidth }}>\n            <Star sx={{ \n              fontSize: size.icon, \n              color: 'warning.main', \n              mb: 1.5,\n              filter: 'drop-shadow(0 2px 4px rgba(255,193,7,0.2))'\n            }} />\n            <Typography variant={size.textVariant} fontWeight=\"bold\" color=\"warning.main\" sx={{ mb: 0.5 }}>\n              {stats.averageRating.toFixed(1)}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" fontWeight={500}>\n              Calificación Promedio\n            </Typography>\n          </Box>\n        );\n      })()}\n\n      {/* Tertiary stats */}\n      <Box sx={{ textAlign: 'center', minWidth: 110 }}>\n        <CheckCircle sx={{ \n          fontSize: 44, \n          color: 'success.main', \n          mb: 1.5,\n          filter: 'drop-shadow(0 2px 4px rgba(56,142,60,0.2))'\n        }} />\n        <Typography variant=\"h4\" fontWeight=\"bold\" color=\"success.main\" sx={{ mb: 0.5 }}>\n          {stats.successfulJobs.toLocaleString()}\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\" fontWeight={500}>\n          Trabajos Completados\n        </Typography>\n      </Box>\n\n      <Box sx={{ textAlign: 'center', minWidth: 110 }}>\n        <Groups sx={{ \n          fontSize: 44, \n          color: 'secondary.main', \n          mb: 1.5,\n          filter: 'drop-shadow(0 2px 4px rgba(247,153,28,0.2))'\n        }} />\n        <Typography variant=\"h4\" fontWeight=\"bold\" color=\"secondary.main\" sx={{ mb: 0.5 }}>\n          {stats.activeWorkers.toLocaleString()}\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\" fontWeight={500}>\n          Trabajadores Activos\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport default TrustBadge;","// User types\nexport type UserRole = 'worker' | 'employer';\n\nexport interface User {\n  id: string;\n  email: string;\n  phone?: string;\n  displayName?: string;\n  photoURL?: string;\n  role: UserRole;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n// Worker profile\nexport interface WorkerProfile {\n  userId: string;\n  name: string;\n  trade: Trade;\n  secondaryTrades?: Trade[];\n  experience: number;\n  location: string;\n  bio?: string;\n  photoUrl?: string;\n  certifications: Certification[];\n  rating: number;\n  totalRatings: number;\n  available: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n// Employer profile\nexport interface EmployerProfile {\n  userId: string;\n  companyName: string;\n  contactName: string;\n  businessType: string;\n  location: string;\n  description?: string;\n  logoUrl?: string;\n  rating: number;\n  totalRatings: number;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n// Trade enum\nexport enum Trade {\n  WAITER = 'waiter',\n  COOK = 'cook',\n  BARTENDER = 'bartender',\n  CLEANER = 'cleaner',\n  SECURITY = 'security',\n  DRIVER = 'driver',\n  TRANSLATOR = 'translator',\n  GUIDE = 'guide',\n  ELECTRICIAN = 'electrician',\n  PLUMBER = 'plumber',\n  CARPENTER = 'carpenter',\n  PAINTER = 'painter',\n  GARDENER = 'gardener',\n  TECHNICIAN = 'technician',\n  OTHER = 'other'\n}\n\n// Certification\nexport interface Certification {\n  id: string;\n  name: string;\n  type?: string; // food_handling, first_aid, driver_license, etc.\n  issuer: string;\n  issueDate: Date;\n  expiryDate?: Date;\n  fileUrl?: string;\n  verified: boolean;\n}\n\n// Job posting\nexport interface JobPosting {\n  id: string;\n  employerId: string;\n  employerName: string;\n  title: string;\n  description: string;\n  trade: Trade;\n  salary: {\n    amount: number;\n    period: 'hour' | 'day' | 'week' | 'month' | 'project';\n  };\n  duration?: string;\n  location: string;\n  requirements?: string[];\n  status: 'open' | 'closed' | 'in_progress';\n  createdAt: Date;\n  updatedAt: Date;\n  applicants?: string[];\n}\n\n// Job application\nexport interface JobApplication {\n  id: string;\n  jobId: string;\n  workerId: string;\n  workerName: string;\n  workerPhoto?: string;\n  workerRating?: number;\n  workerExperience?: number;\n  workerTrade?: string;\n  coverLetter?: string;\n  status: 'pending' | 'accepted' | 'rejected';\n  appliedAt: Date | any;\n  updatedAt: Date | any;\n}\n\n// Rating\nexport interface Rating {\n  id: string;\n  fromUserId: string;\n  toUserId: string;\n  jobId: string;\n  score: number;\n  comment?: string;\n  createdAt: Date;\n}\n\n// Message\nexport interface Message {\n  id: string;\n  fromUserId: string;\n  toUserId: string;\n  content: string;\n  read: boolean;\n  createdAt: Date;\n}","import React from 'react';\nimport { Box, Typography, Button, Paper } from '@mui/material';\nimport {\n  SearchOff,\n  WorkOff,\n  PersonOff,\n  EventBusy,\n  FolderOff,\n  CloudOff,\n} from '@mui/icons-material';\n\ninterface EmptyStateProps {\n  type: 'search' | 'jobs' | 'workers' | 'applications' | 'general' | 'error';\n  title?: string;\n  description?: string;\n  action?: {\n    label: string;\n    onClick: () => void;\n  };\n}\n\nconst EmptyState: React.FC<EmptyStateProps> = ({ type, title, description, action }) => {\n  const getIcon = () => {\n    const iconProps = { sx: { fontSize: 80, color: 'text.secondary', opacity: 0.3 } };\n    \n    switch (type) {\n      case 'search':\n        return <SearchOff {...iconProps} />;\n      case 'jobs':\n        return <WorkOff {...iconProps} />;\n      case 'workers':\n        return <PersonOff {...iconProps} />;\n      case 'applications':\n        return <EventBusy {...iconProps} />;\n      case 'error':\n        return <CloudOff {...iconProps} />;\n      default:\n        return <FolderOff {...iconProps} />;\n    }\n  };\n\n  const getDefaultContent = () => {\n    switch (type) {\n      case 'search':\n        return {\n          title: 'No se encontraron resultados',\n          description: 'Intenta ajustar los filtros o cambiar los términos de búsqueda'\n        };\n      case 'jobs':\n        return {\n          title: 'No hay empleos disponibles',\n          description: 'Nuevas oportunidades aparecen todos los días. Vuelve pronto.'\n        };\n      case 'workers':\n        return {\n          title: 'No se encontraron trabajadores',\n          description: 'Ajusta los filtros para ver más perfiles disponibles'\n        };\n      case 'applications':\n        return {\n          title: 'Sin aplicaciones',\n          description: 'Aún no has aplicado a ningún empleo'\n        };\n      case 'error':\n        return {\n          title: 'Algo salió mal',\n          description: 'Hubo un error al cargar la información. Por favor intenta de nuevo.'\n        };\n      default:\n        return {\n          title: 'No hay datos disponibles',\n          description: 'No hay información para mostrar en este momento'\n        };\n    }\n  };\n\n  const content = getDefaultContent();\n\n  return (\n    <Paper\n      sx={{\n        p: 8,\n        textAlign: 'center',\n        borderRadius: 3,\n        background: 'linear-gradient(135deg, rgba(0, 122, 51, 0.02) 0%, rgba(247, 153, 28, 0.02) 100%)',\n        border: '1px solid',\n        borderColor: 'divider',\n      }}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          gap: 3,\n        }}\n      >\n        <Box\n          sx={{\n            position: 'relative',\n            '&::before': {\n              content: '\"\"',\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n              width: 120,\n              height: 120,\n              borderRadius: '50%',\n              background: 'radial-gradient(circle, rgba(0, 122, 51, 0.05) 0%, transparent 70%)',\n            },\n          }}\n        >\n          {getIcon()}\n        </Box>\n        \n        <Box>\n          <Typography\n            variant=\"h5\"\n            fontWeight={600}\n            gutterBottom\n            color=\"text.primary\"\n          >\n            {title || content.title}\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            color=\"text.secondary\"\n            sx={{ maxWidth: 400, mx: 'auto' }}\n          >\n            {description || content.description}\n          </Typography>\n        </Box>\n\n        {action && (\n          <Button\n            variant=\"contained\"\n            onClick={action.onClick}\n            sx={{\n              mt: 2,\n              background: 'linear-gradient(135deg, #007A33 0%, #00541E 100%)',\n              '&:hover': {\n                background: 'linear-gradient(135deg, #00541E 0%, #007A33 100%)',\n              },\n            }}\n          >\n            {action.label}\n          </Button>\n        )}\n      </Box>\n    </Paper>\n  );\n};\n\nexport default EmptyState;","import React from 'react';\nimport { Box, Card, CardContent, Skeleton, Grid } from '@mui/material';\n\n// Skeleton loader for job cards\nexport const JobCardSkeleton: React.FC = () => (\n  <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n    <CardContent sx={{ flex: 1 }}>\n      <Skeleton variant=\"text\" width=\"80%\" height={32} sx={{ mb: 1 }} />\n      <Skeleton variant=\"text\" width=\"60%\" height={20} sx={{ mb: 2 }} />\n      \n      <Box sx={{ display: 'flex', gap: 1, mb: 2 }}>\n        <Skeleton variant=\"rounded\" width={80} height={24} />\n        <Skeleton variant=\"rounded\" width={100} height={24} />\n      </Box>\n      \n      <Skeleton variant=\"text\" width=\"100%\" height={20} />\n      <Skeleton variant=\"text\" width=\"100%\" height={20} sx={{ mb: 2 }} />\n      \n      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n        <Skeleton variant=\"circular\" width={20} height={20} />\n        <Skeleton variant=\"text\" width={120} height={24} />\n      </Box>\n    </CardContent>\n    \n    <Box sx={{ p: 2, pt: 0 }}>\n      <Skeleton variant=\"rounded\" width=\"100%\" height={40} />\n    </Box>\n  </Card>\n);\n\n// Skeleton loader for worker cards\nexport const WorkerCardSkeleton: React.FC = () => (\n  <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n    <Skeleton variant=\"rectangular\" height={200} />\n    <CardContent sx={{ flex: 1 }}>\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n        <Skeleton variant=\"text\" width=\"70%\" height={28} />\n        <Skeleton variant=\"circular\" width={18} height={18} sx={{ ml: 1 }} />\n      </Box>\n      \n      <Skeleton variant=\"rounded\" width={100} height={24} sx={{ mb: 1 }} />\n      \n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n        <Skeleton variant=\"text\" width={100} height={20} />\n        <Skeleton variant=\"text\" width={30} height={20} sx={{ ml: 1 }} />\n      </Box>\n      \n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n        <Skeleton variant=\"circular\" width={16} height={16} sx={{ mr: 0.5 }} />\n        <Skeleton variant=\"text\" width={120} height={20} />\n      </Box>\n      \n      <Skeleton variant=\"text\" width=\"80%\" height={20} />\n    </CardContent>\n    \n    <Box sx={{ p: 2, pt: 0 }}>\n      <Skeleton variant=\"rounded\" width=\"100%\" height={40} />\n    </Box>\n  </Card>\n);\n\n// Skeleton loader for list views\nexport const ListSkeleton: React.FC<{ items?: number; type?: 'job' | 'worker' }> = ({ \n  items = 6, \n  type = 'job' \n}) => {\n  const SkeletonComponent = type === 'job' ? JobCardSkeleton : WorkerCardSkeleton;\n  const gridCols = type === 'job' ? { xs: 12, md: 6, lg: 4 } : { xs: 12, sm: 6, md: 4, lg: 3 };\n  \n  return (\n    <Grid container spacing={3}>\n      {[...Array(items)].map((_, index) => (\n        <Grid item {...gridCols} key={index}>\n          <SkeletonComponent />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\n// Skeleton loader for filters\nexport const FilterSkeleton: React.FC = () => (\n  <Box sx={{ p: 3, borderRadius: 2, bgcolor: 'background.paper', mb: 4 }}>\n    <Grid container spacing={2}>\n      <Grid item xs={12} md={4}>\n        <Skeleton variant=\"rounded\" height={56} />\n      </Grid>\n      <Grid item xs={12} md={4}>\n        <Skeleton variant=\"rounded\" height={56} />\n      </Grid>\n      <Grid item xs={12} md={4}>\n        <Skeleton variant=\"rounded\" height={56} />\n      </Grid>\n    </Grid>\n  </Box>\n);\n\n// Profile header skeleton\nexport const ProfileHeaderSkeleton: React.FC = () => (\n  <Box sx={{ display: 'flex', alignItems: 'center', gap: 3, mb: 4 }}>\n    <Skeleton variant=\"circular\" width={120} height={120} />\n    <Box sx={{ flex: 1 }}>\n      <Skeleton variant=\"text\" width=\"40%\" height={40} sx={{ mb: 1 }} />\n      <Skeleton variant=\"text\" width=\"60%\" height={24} sx={{ mb: 1 }} />\n      <Box sx={{ display: 'flex', gap: 1 }}>\n        <Skeleton variant=\"rounded\" width={100} height={32} />\n        <Skeleton variant=\"rounded\" width={100} height={32} />\n      </Box>\n    </Box>\n  </Box>\n);\n\nexport default ListSkeleton;","import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Container,\n  Card,\n  CardContent,\n  Typography,\n  Button,\n  Box,\n  TextField,\n  MenuItem,\n  Chip,\n  InputAdornment,\n  Paper,\n  Rating,\n  Avatar,\n  useTheme,\n  Fade,\n  Slide,\n  IconButton,\n  ToggleButtonGroup,\n  ToggleButton,\n  Badge,\n  Tooltip,\n  alpha,\n  Autocomplete,\n  Slider,\n} from '@mui/material';\nimport { Grid } from '@mui/material';\nimport {\n  Search,\n  LocationOn,\n  AttachMoney,\n  Work,\n  Schedule,\n  ViewModule,\n  ViewList,\n  FilterList,\n  Clear,\n  Bookmark,\n  BookmarkBorder,\n  TrendingUp,\n  NewReleases,\n  Verified,\n  Business,\n  CalendarToday,\n  Groups,\n} from '@mui/icons-material';\nimport { collection, query, where, getDocs, orderBy, limit } from 'firebase/firestore';\nimport { db } from '../config/firebase';\nimport { JobPosting, Trade } from '../types';\nimport EmptyState from '../components/ui/EmptyState';\nimport { JobCardSkeleton, FilterSkeleton } from '../components/ui/SkeletonLoader';\nimport { TrustBadge } from '../components/ui/TrustBadges';\n\nconst Jobs: React.FC = () => {\n  const { t } = useTranslation();\n  const theme = useTheme();\n  const navigate = useNavigate();\n  \n  const [jobs, setJobs] = useState<JobPosting[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedTrade, setSelectedTrade] = useState<Trade | ''>('');\n  const [locationFilter, setLocationFilter] = useState('');\n  const [viewMode, setViewMode] = useState<'grid' | 'list'>('grid');\n  const [sortBy, setSortBy] = useState<'recent' | 'salary' | 'popular'>('recent');\n  const [salaryRange, setSalaryRange] = useState<number[]>([0, 10000]);\n  const [savedJobs, setSavedJobs] = useState<string[]>([]);\n  const [showFilters, setShowFilters] = useState(true);\n\n  // Animation states\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    fetchJobs();\n    setIsVisible(true);\n    // Load saved jobs from localStorage\n    const saved = localStorage.getItem('savedJobs');\n    if (saved) setSavedJobs(JSON.parse(saved));\n  }, [selectedTrade]);\n\n  const fetchJobs = async () => {\n    setLoading(true);\n    try {\n      let q = query(\n        collection(db, 'jobs'),\n        where('status', '==', 'open'),\n        orderBy('createdAt', 'desc'),\n        limit(50)\n      );\n\n      if (selectedTrade) {\n        q = query(\n          collection(db, 'jobs'),\n          where('status', '==', 'open'),\n          where('trade', '==', selectedTrade),\n          orderBy('createdAt', 'desc'),\n          limit(50)\n        );\n      }\n\n      const querySnapshot = await getDocs(q);\n      const jobsData: JobPosting[] = [];\n      querySnapshot.forEach((doc) => {\n        jobsData.push({ id: doc.id, ...doc.data() } as JobPosting);\n      });\n      \n      // Simulate some additional data for demonstration\n      const enrichedJobs = jobsData.map(job => ({\n        ...job,\n        applicants: job.applicants || Array(Math.floor(Math.random() * 50)).fill(''),\n        urgent: Math.random() > 0.7,\n        verified: Math.random() > 0.5,\n        featured: Math.random() > 0.8,\n      }));\n      \n      setJobs(enrichedJobs);\n    } catch (error) {\n      console.error('Error fetching jobs:', error);\n    } finally {\n      setTimeout(() => setLoading(false), 500); // Small delay for smooth transition\n    }\n  };\n\n  const handleSaveJob = useCallback((jobId: string) => {\n    const newSaved = savedJobs.includes(jobId)\n      ? savedJobs.filter(id => id !== jobId)\n      : [...savedJobs, jobId];\n    \n    setSavedJobs(newSaved);\n    localStorage.setItem('savedJobs', JSON.stringify(newSaved));\n  }, [savedJobs]);\n\n  const filteredJobs = jobs.filter(job => {\n    const matchesSearch = job.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         job.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         job.employerName.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesLocation = !locationFilter || job.location.toLowerCase().includes(locationFilter.toLowerCase());\n    const matchesSalary = job.salary.amount >= salaryRange[0] && job.salary.amount <= salaryRange[1];\n    return matchesSearch && matchesLocation && matchesSalary;\n  }).sort((a, b) => {\n    switch (sortBy) {\n      case 'salary':\n        return b.salary.amount - a.salary.amount;\n      case 'popular':\n        return (b.applicants?.length || 0) - (a.applicants?.length || 0);\n      default:\n        return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\n    }\n  });\n\n  const formatSalary = (salary: JobPosting['salary']) => {\n    const period = {\n      hour: 'hora',\n      day: 'día',\n      week: 'semana',\n      month: 'mes',\n      project: 'proyecto'\n    };\n    return `$${salary.amount.toLocaleString()} / ${period[salary.period]}`;\n  };\n\n  const getDaysAgo = (date: Date) => {\n    const days = Math.floor((Date.now() - new Date(date).getTime()) / (1000 * 60 * 60 * 24));\n    if (days === 0) return 'Hoy';\n    if (days === 1) return 'Ayer';\n    if (days < 7) return `Hace ${days} días`;\n    if (days < 30) return `Hace ${Math.floor(days / 7)} semanas`;\n    return `Hace ${Math.floor(days / 30)} meses`;\n  };\n\n  const JobCard = ({ job, index }: { job: any; index: number }) => (\n    <Fade in={isVisible} timeout={300 + index * 50}>\n      <Card\n        sx={{\n          height: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n          position: 'relative',\n          transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n          border: job.featured ? '2px solid' : '1px solid',\n          borderColor: job.featured ? theme.palette.secondary.main : 'divider',\n          overflow: 'hidden',\n          '&::before': job.featured ? {\n            content: '\"\"',\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            height: 3,\n            background: `linear-gradient(90deg, ${theme.palette.secondary.main} 0%, ${theme.palette.secondary.light} 100%)`,\n          } : {},\n          '&:hover': {\n            transform: 'translateY(-6px)',\n            boxShadow: `0 12px 24px ${alpha(theme.palette.primary.main, 0.15)}`,\n            borderColor: theme.palette.primary.main,\n          },\n        }}\n      >\n        {/* Badges */}\n        <Box\n          sx={{\n            position: 'absolute',\n            top: 12,\n            right: 12,\n            display: 'flex',\n            gap: 1,\n            zIndex: 1,\n          }}\n        >\n          {job.urgent && (\n            <Chip\n              icon={<NewReleases />}\n              label=\"Urgente\"\n              size=\"small\"\n              sx={{\n                bgcolor: alpha(theme.palette.error.main, 0.9),\n                color: 'white',\n                fontWeight: 600,\n              }}\n            />\n          )}\n          {job.featured && (\n            <Chip\n              icon={<TrendingUp />}\n              label=\"Destacado\"\n              size=\"small\"\n              sx={{\n                bgcolor: alpha(theme.palette.secondary.main, 0.9),\n                color: 'white',\n                fontWeight: 600,\n              }}\n            />\n          )}\n        </Box>\n\n        <CardContent sx={{ flex: 1, pb: 1 }}>\n          {/* Header */}\n          <Box sx={{ mb: 2 }}>\n            <Box sx={{ display: 'flex', alignItems: 'start', justifyContent: 'space-between', mb: 1 }}>\n              <Typography \n                variant=\"h6\" \n                fontWeight={600}\n                sx={{ \n                  flex: 1,\n                  pr: 2,\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis',\n                  display: '-webkit-box',\n                  WebkitLineClamp: 2,\n                  WebkitBoxOrient: 'vertical',\n                }}\n              >\n                {job.title}\n              </Typography>\n              <IconButton\n                size=\"small\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  handleSaveJob(job.id);\n                }}\n                sx={{ ml: 1 }}\n              >\n                {savedJobs.includes(job.id) ? (\n                  <Bookmark sx={{ color: theme.palette.primary.main }} />\n                ) : (\n                  <BookmarkBorder />\n                )}\n              </IconButton>\n            </Box>\n            \n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 1 }}>\n              <Business sx={{ fontSize: 16, color: 'text.secondary' }} />\n              <Typography variant=\"body2\" color=\"text.secondary\" fontWeight={500}>\n                {job.employerName}\n              </Typography>\n              {job.verified && <TrustBadge type=\"verified\" size=\"small\" />}\n            </Box>\n          </Box>\n\n          {/* Tags */}\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5, mb: 2 }}>\n            <Chip\n              icon={<Work sx={{ fontSize: 16 }} />}\n              label={t(`trades.${job.trade}`)}\n              size=\"small\"\n              color=\"primary\"\n              variant=\"outlined\"\n            />\n            <Chip\n              icon={<LocationOn sx={{ fontSize: 16 }} />}\n              label={job.location}\n              size=\"small\"\n              variant=\"outlined\"\n            />\n          </Box>\n\n          {/* Description */}\n          <Typography\n            variant=\"body2\"\n            color=\"text.secondary\"\n            sx={{\n              mb: 2,\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              display: '-webkit-box',\n              WebkitLineClamp: 2,\n              WebkitBoxOrient: 'vertical',\n              lineHeight: 1.5,\n            }}\n          >\n            {job.description}\n          </Typography>\n\n          {/* Footer Info */}\n          <Box sx={{ mt: 'auto' }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 1 }}>\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <AttachMoney sx={{ fontSize: 20, color: theme.palette.success.main, mr: 0.5 }} />\n                <Typography variant=\"body1\" fontWeight={600} color=\"success.main\">\n                  {formatSalary(job.salary)}\n                </Typography>\n              </Box>\n              {job.duration && (\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                  <Schedule sx={{ fontSize: 16, color: 'text.secondary', mr: 0.5 }} />\n                  <Typography variant=\"caption\" color=\"text.secondary\">\n                    {job.duration}\n                  </Typography>\n                </Box>\n              )}\n            </Box>\n\n            <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                <CalendarToday sx={{ fontSize: 14, color: 'text.secondary' }} />\n                <Typography variant=\"caption\" color=\"text.secondary\">\n                  {getDaysAgo(job.createdAt)}\n                </Typography>\n              </Box>\n              {job.applicants && job.applicants.length > 0 && (\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\n                  <Groups sx={{ fontSize: 14, color: 'text.secondary' }} />\n                  <Typography variant=\"caption\" color=\"text.secondary\">\n                    {job.applicants.length} aplicantes\n                  </Typography>\n                </Box>\n              )}\n            </Box>\n          </Box>\n        </CardContent>\n\n        <Box sx={{ p: 2, pt: 0 }}>\n          <Button\n            fullWidth\n            variant=\"contained\"\n            onClick={() => navigate(`/jobs/${job.id}`)}\n            sx={{\n              background: `linear-gradient(135deg, ${theme.palette.primary.main} 0%, ${theme.palette.primary.dark} 100%)`,\n              '&:hover': {\n                background: `linear-gradient(135deg, ${theme.palette.primary.dark} 0%, ${theme.palette.primary.main} 100%)`,\n              },\n            }}\n          >\n            {t('actions.viewDetails')}\n          </Button>\n        </Box>\n      </Card>\n    </Fade>\n  );\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n      {/* Header */}\n      <Box sx={{ mb: 4 }}>\n        <Typography variant=\"h3\" gutterBottom fontWeight={600}>\n          {t('nav.jobs')}\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\">\n          {filteredJobs.length} oportunidades disponibles para el Mundial 2026\n        </Typography>\n      </Box>\n\n      {/* Enhanced Filters */}\n      <Slide direction=\"down\" in={showFilters} mountOnEnter unmountOnExit>\n        <Paper \n          sx={{ \n            p: 3, \n            mb: 4,\n            border: '1px solid',\n            borderColor: 'divider',\n            borderRadius: 2,\n          }}\n        >\n          {loading ? (\n            <FilterSkeleton />\n          ) : (\n            <>\n              <Grid container spacing={2} alignItems=\"center\">\n                <Grid item xs={12} md={3}>\n                  <TextField\n                    fullWidth\n                    placeholder=\"Buscar empleos...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <Search />\n                        </InputAdornment>\n                      ),\n                      endAdornment: searchTerm && (\n                        <InputAdornment position=\"end\">\n                          <IconButton size=\"small\" onClick={() => setSearchTerm('')}>\n                            <Clear />\n                          </IconButton>\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                </Grid>\n                \n                <Grid item xs={12} md={3}>\n                  <Autocomplete\n                    options={Object.values(Trade)}\n                    value={selectedTrade || null}\n                    onChange={(e, value) => setSelectedTrade(value as Trade | '')}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label={t('profile.trade')}\n                        InputProps={{\n                          ...params.InputProps,\n                          startAdornment: (\n                            <>\n                              <InputAdornment position=\"start\">\n                                <Work />\n                              </InputAdornment>\n                              {params.InputProps.startAdornment}\n                            </>\n                          ),\n                        }}\n                      />\n                    )}\n                    getOptionLabel={(option) => t(`trades.${option}`)}\n                  />\n                </Grid>\n                \n                <Grid item xs={12} md={3}>\n                  <TextField\n                    fullWidth\n                    placeholder=\"Ubicación\"\n                    value={locationFilter}\n                    onChange={(e) => setLocationFilter(e.target.value)}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <LocationOn />\n                        </InputAdornment>\n                      ),\n                      endAdornment: locationFilter && (\n                        <InputAdornment position=\"end\">\n                          <IconButton size=\"small\" onClick={() => setLocationFilter('')}>\n                            <Clear />\n                          </IconButton>\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                </Grid>\n                \n                <Grid item xs={12} md={3}>\n                  <TextField\n                    fullWidth\n                    select\n                    label=\"Ordenar por\"\n                    value={sortBy}\n                    onChange={(e) => setSortBy(e.target.value as any)}\n                  >\n                    <MenuItem value=\"recent\">Más recientes</MenuItem>\n                    <MenuItem value=\"salary\">Mayor salario</MenuItem>\n                    <MenuItem value=\"popular\">Más populares</MenuItem>\n                  </TextField>\n                </Grid>\n              </Grid>\n\n              {/* Salary Range Slider */}\n              <Box sx={{ mt: 3 }}>\n                <Typography gutterBottom variant=\"body2\" color=\"text.secondary\">\n                  Rango salarial: ${salaryRange[0].toLocaleString()} - ${salaryRange[1].toLocaleString()}\n                </Typography>\n                <Slider\n                  value={salaryRange}\n                  onChange={(e, value) => setSalaryRange(value as number[])}\n                  valueLabelDisplay=\"auto\"\n                  min={0}\n                  max={10000}\n                  step={500}\n                  sx={{ maxWidth: 400 }}\n                />\n              </Box>\n            </>\n          )}\n        </Paper>\n      </Slide>\n\n      {/* View Mode Toggle */}\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\n        <Button\n          startIcon={<FilterList />}\n          onClick={() => setShowFilters(!showFilters)}\n          variant=\"outlined\"\n        >\n          {showFilters ? 'Ocultar filtros' : 'Mostrar filtros'}\n        </Button>\n        \n        <ToggleButtonGroup\n          value={viewMode}\n          exclusive\n          onChange={(e, value) => value && setViewMode(value)}\n          size=\"small\"\n        >\n          <ToggleButton value=\"grid\">\n            <ViewModule />\n          </ToggleButton>\n          <ToggleButton value=\"list\">\n            <ViewList />\n          </ToggleButton>\n        </ToggleButtonGroup>\n      </Box>\n\n      {/* Job Listings */}\n      {loading ? (\n        <Grid container spacing={3}>\n          {[...Array(6)].map((_, index) => (\n            <Grid item xs={12} md={viewMode === 'grid' ? 6 : 12} lg={viewMode === 'grid' ? 4 : 12} key={index}>\n              <JobCardSkeleton />\n            </Grid>\n          ))}\n        </Grid>\n      ) : filteredJobs.length === 0 ? (\n        <EmptyState\n          type=\"search\"\n          title=\"No se encontraron empleos\"\n          description=\"Intenta ajustar los filtros o cambiar los términos de búsqueda\"\n          action={{\n            label: 'Limpiar filtros',\n            onClick: () => {\n              setSearchTerm('');\n              setSelectedTrade('');\n              setLocationFilter('');\n              setSalaryRange([0, 10000]);\n            }\n          }}\n        />\n      ) : (\n        <Grid container spacing={3}>\n          {filteredJobs.map((job, index) => (\n            <Grid \n              item \n              xs={12} \n              md={viewMode === 'grid' ? 6 : 12} \n              lg={viewMode === 'grid' ? 4 : 12} \n              key={job.id}\n            >\n              <JobCard job={job} index={index} />\n            </Grid>\n          ))}\n        </Grid>\n      )}\n\n      {/* Load More */}\n      {filteredJobs.length > 0 && (\n        <Box sx={{ display: 'flex', justifyContent: 'center', mt: 6 }}>\n          <Button\n            variant=\"outlined\"\n            size=\"large\"\n            sx={{ px: 6 }}\n          >\n            Cargar más empleos\n          </Button>\n        </Box>\n      )}\n    </Container>\n  );\n};\n\nexport default Jobs;"],"names":["TrustBadge","_ref","type","size","showLabel","config","getBadgeConfig","icon","_jsx","Verified","label","color","tooltip","Shield","Star","WorkHistory","Badge","LocalPolice","Gavel","CheckCircle","iconSize","Tooltip","title","arrow","placement","children","Chip","React","sx","fontSize","backgroundColor","concat","borderColor","fontWeight","Box","component","display","verticalAlign","TrustSection","_ref3","stats","getStatPriority","statKey","getStatSize","priority","textVariant","minWidth","_jsxs","flexWrap","gap","xs","md","justifyContent","alignItems","p","borderRadius","background","border","boxShadow","position","content","top","left","transform","width","height","textAlign","bgcolor","Security","mb","filter","Typography","variant","verifiedUsers","toLocaleString","averageRating","toFixed","successfulJobs","Groups","activeWorkers","Trade","description","action","getDefaultContent","Paper","flexDirection","getIcon","iconProps","opacity","SearchOff","_objectSpread","WorkOff","PersonOff","EventBusy","CloudOff","FolderOff","gutterBottom","maxWidth","mx","Button","onClick","mt","JobCardSkeleton","Card","CardContent","flex","Skeleton","pt","FilterSkeleton","Grid","container","spacing","item","Jobs","t","useTranslation","theme","useTheme","navigate","useNavigate","jobs","setJobs","useState","loading","setLoading","searchTerm","setSearchTerm","selectedTrade","setSelectedTrade","locationFilter","setLocationFilter","viewMode","setViewMode","sortBy","setSortBy","salaryRange","setSalaryRange","savedJobs","setSavedJobs","showFilters","setShowFilters","isVisible","setIsVisible","useEffect","fetchJobs","saved","localStorage","getItem","JSON","parse","async","q","query","collection","db","where","orderBy","limit","querySnapshot","getDocs","jobsData","forEach","doc","push","id","data","enrichedJobs","map","job","applicants","Array","Math","floor","random","fill","urgent","verified","featured","error","console","setTimeout","handleSaveJob","useCallback","jobId","newSaved","includes","setItem","stringify","filteredJobs","matchesSearch","toLowerCase","employerName","matchesLocation","location","matchesSalary","salary","amount","sort","a","b","_b$applicants","_a$applicants","length","Date","createdAt","getTime","getDaysAgo","date","days","now","JobCard","index","Fade","in","timeout","transition","palette","secondary","main","overflow","right","light","alpha","primary","zIndex","NewReleases","TrendingUp","pb","pr","textOverflow","WebkitLineClamp","WebkitBoxOrient","IconButton","e","stopPropagation","ml","Bookmark","BookmarkBorder","Business","Work","trade","LocationOn","lineHeight","AttachMoney","success","mr","hour","day","week","month","project","period","duration","Schedule","CalendarToday","fullWidth","dark","Container","py","Slide","direction","mountOnEnter","unmountOnExit","_Fragment","TextField","placeholder","value","onChange","target","InputProps","startAdornment","InputAdornment","Search","endAdornment","Clear","Autocomplete","options","Object","values","renderInput","params","getOptionLabel","option","select","MenuItem","Slider","valueLabelDisplay","min","max","step","startIcon","FilterList","ToggleButtonGroup","exclusive","ToggleButton","ViewModule","ViewList","_","lg","EmptyState","px"],"sourceRoot":""}