{"version":3,"file":"static/js/994.a27d83af.chunk.js","mappings":"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","sources":["types/index.ts","pages/WorkerProfileEdit.tsx"],"sourcesContent":["// User types\nexport type UserRole = 'worker' | 'employer';\n\nexport interface User {\n  id: string;\n  email: string;\n  phone?: string;\n  displayName?: string;\n  photoURL?: string;\n  role: UserRole;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n// Worker profile\nexport interface WorkerProfile {\n  userId: string;\n  name: string;\n  trade: Trade;\n  secondaryTrades?: Trade[];\n  experience: number;\n  location: string;\n  bio?: string;\n  photoUrl?: string;\n  certifications: Certification[];\n  rating: number;\n  totalRatings: number;\n  available: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n// Employer profile\nexport interface EmployerProfile {\n  userId: string;\n  companyName: string;\n  contactName: string;\n  businessType: string;\n  location: string;\n  description?: string;\n  logoUrl?: string;\n  rating: number;\n  totalRatings: number;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n// Trade enum\nexport enum Trade {\n  WAITER = 'waiter',\n  COOK = 'cook',\n  BARTENDER = 'bartender',\n  CLEANER = 'cleaner',\n  SECURITY = 'security',\n  DRIVER = 'driver',\n  TRANSLATOR = 'translator',\n  GUIDE = 'guide',\n  ELECTRICIAN = 'electrician',\n  PLUMBER = 'plumber',\n  CARPENTER = 'carpenter',\n  PAINTER = 'painter',\n  GARDENER = 'gardener',\n  TECHNICIAN = 'technician',\n  OTHER = 'other'\n}\n\n// Certification\nexport interface Certification {\n  id: string;\n  name: string;\n  type?: string; // food_handling, first_aid, driver_license, etc.\n  issuer: string;\n  issueDate: Date;\n  expiryDate?: Date;\n  fileUrl?: string;\n  verified: boolean;\n}\n\n// Job posting\nexport interface JobPosting {\n  id: string;\n  employerId: string;\n  employerName: string;\n  title: string;\n  description: string;\n  trade: Trade;\n  salary: {\n    amount: number;\n    period: 'hour' | 'day' | 'week' | 'month' | 'project';\n  };\n  duration?: string;\n  location: string;\n  requirements?: string[];\n  status: 'open' | 'closed' | 'in_progress';\n  createdAt: Date;\n  updatedAt: Date;\n  applicants?: string[];\n}\n\n// Job application\nexport interface JobApplication {\n  id: string;\n  jobId: string;\n  workerId: string;\n  workerName: string;\n  workerPhoto?: string;\n  workerRating?: number;\n  workerExperience?: number;\n  workerTrade?: string;\n  coverLetter?: string;\n  status: 'pending' | 'accepted' | 'rejected';\n  appliedAt: Date | any;\n  updatedAt: Date | any;\n}\n\n// Rating\nexport interface Rating {\n  id: string;\n  fromUserId: string;\n  toUserId: string;\n  jobId: string;\n  score: number;\n  comment?: string;\n  createdAt: Date;\n}\n\n// Message\nexport interface Message {\n  id: string;\n  fromUserId: string;\n  toUserId: string;\n  content: string;\n  read: boolean;\n  createdAt: Date;\n}","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Container,\n  Paper,\n  TextField,\n  Button,\n  Typography,\n  Box,\n  MenuItem,\n  Switch,\n  FormControlLabel,\n  Avatar,\n  IconButton,\n  Chip,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  CircularProgress,\n  Alert,\n  Card,\n  CardContent,\n  Rating,\n  Divider,\n  Stack,\n  InputAdornment,\n  Tabs,\n  Tab,\n  Badge,\n  Tooltip,\n  FormGroup,\n  Checkbox\n} from '@mui/material';\nimport { Grid } from '@mui/material';\nimport {\n  PhotoCamera,\n  Upload,\n  Delete,\n  Save,\n  CheckCircle,\n  Work,\n  School,\n  LocationOn,\n  AttachMoney,\n  CalendarMonth,\n  Language,\n  Build,\n  Star,\n  Add,\n  Edit,\n  Verified,\n  LocalHospital,\n  Restaurant,\n  DirectionsCar,\n  Security,\n  CleaningServices,\n  Translate,\n  WorkspacePremium,\n  EmojiEvents,\n  Person,\n  Phone,\n  Email as EmailIcon,\n  WhatsApp,\n  Facebook,\n  Instagram,\n  Schedule,\n  Construction,\n  Handyman,\n  CleanHands\n} from '@mui/icons-material';\nimport { doc, getDoc, setDoc, updateDoc } from 'firebase/firestore';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { db, storage } from '../config/firebase';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Trade } from '../types';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`profile-tabpanel-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\n    </div>\n  );\n}\n\nconst WorkerProfileEdit: React.FC = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { currentUser, userData } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);\n  const [tabValue, setTabValue] = useState(0);\n  const [profileComplete, setProfileComplete] = useState(0);\n  \n  // Worker profile state - properly structured\n  const [profile, setProfile] = useState({\n    userId: '',\n    name: '',\n    trade: Trade.OTHER,\n    secondaryTrades: [] as Trade[],\n    experience: 0,\n    location: '',\n    bio: '',\n    available: true,\n    certifications: [],\n    rating: 0,\n    totalRatings: 0,\n    photoUrl: '',\n    phone: '',\n    email: '',\n    whatsapp: '',\n    hourlyRate: 0,\n    skills: [] as string[],\n    languages: [] as string[],\n    availability: {\n      monday: true,\n      tuesday: true,\n      wednesday: true,\n      thursday: true,\n      friday: true,\n      saturday: true,\n      sunday: false\n    },\n    preferredAreas: [] as string[]\n  });\n\n  const allSkills = [\n    'Atención al cliente',\n    'Trabajo en equipo',\n    'Puntualidad',\n    'Responsabilidad',\n    'Comunicación efectiva',\n    'Resolución de problemas',\n    'Manejo de efectivo',\n    'Inventario',\n    'Limpieza profunda',\n    'Protocolos de seguridad',\n    'Primeros auxilios',\n    'Manejo de alimentos',\n    'Coctelería',\n    'Servicio de mesa',\n    'Mantenimiento básico',\n    'Herramientas eléctricas',\n    'Plomería básica',\n    'Pintura',\n    'Carpintería',\n    'Jardinería'\n  ];\n\n  const alvaroObregonAreas = [\n    'Santa Fe',\n    'San Ángel',\n    'San Ángel Inn',\n    'Florida',\n    'Guadalupe Inn',\n    'Chimalistac',\n    'Tlacopac',\n    'Las Águilas',\n    'Olivar de los Padres',\n    'Mixcoac',\n    'Alfonso XIII',\n    'Progreso Tizapán',\n    'Barrio Norte',\n    'Lomas de Plateros',\n    'Merced Gómez'\n  ];\n\n  const availableCertifications = [\n    { \n      id: 'food_handling',\n      name: 'Manejo Higiénico de Alimentos',\n      provider: 'COFEPRIS',\n      duration: '8 horas',\n      price: 'Gratis',\n      icon: <Restaurant />,\n      description: 'Certificación obligatoria para trabajar en restaurantes y bares'\n    },\n    {\n      id: 'first_aid',\n      name: 'Primeros Auxilios Básicos',\n      provider: 'Cruz Roja',\n      duration: '16 horas',\n      price: '$500',\n      icon: <LocalHospital />,\n      description: 'Aprende a responder en emergencias médicas'\n    },\n    {\n      id: 'security_guard',\n      name: 'Guardia de Seguridad',\n      provider: 'SSP CDMX',\n      duration: '40 horas',\n      price: '$1,200',\n      icon: <Security />,\n      description: 'Certificación para trabajar en seguridad privada'\n    },\n    {\n      id: 'english_basic',\n      name: 'Inglés Básico para Turismo',\n      provider: 'DOOM Academy',\n      duration: '30 horas',\n      price: 'Gratis',\n      icon: <Translate />,\n      description: 'Frases esenciales en inglés para atender turistas'\n    },\n    {\n      id: 'cleaning_professional',\n      name: 'Limpieza Profesional',\n      provider: 'ISSA México',\n      duration: '20 horas',\n      price: '$800',\n      icon: <CleaningServices />,\n      description: 'Técnicas profesionales de limpieza e higiene'\n    },\n    {\n      id: 'bartender_basic',\n      name: 'Bartender Básico',\n      provider: 'Asociación Mexicana de Bartenders',\n      duration: '24 horas',\n      price: '$1,500',\n      icon: <Restaurant />,\n      description: 'Coctelería básica y servicio de bar'\n    }\n  ];\n\n  useEffect(() => {\n    if (currentUser && userData?.role === 'worker') {\n      fetchProfile();\n    } else if (userData?.role !== 'worker') {\n      // Redirect if not a worker\n      navigate('/profile');\n    }\n  }, [currentUser, userData, navigate]);\n\n  useEffect(() => {\n    calculateProfileComplete();\n  }, [profile]);\n\n  const fetchProfile = async () => {\n    try {\n      setLoading(true);\n      const profileDoc = await getDoc(doc(db, 'workers', currentUser!.uid));\n      \n      if (profileDoc.exists()) {\n        const data = profileDoc.data();\n        setProfile({\n          ...profile,\n          ...data,\n          email: data.email || userData?.email || '',\n          name: data.name || userData?.displayName || ''\n        });\n      } else {\n        // Create initial profile if it doesn't exist\n        const initialProfile = {\n          ...profile,\n          userId: currentUser!.uid,\n          name: userData?.displayName || '',\n          email: userData?.email || '',\n          createdAt: new Date(),\n          updatedAt: new Date()\n        };\n        await setDoc(doc(db, 'workers', currentUser!.uid), initialProfile);\n        setProfile(initialProfile);\n      }\n    } catch (error) {\n      console.error('Error fetching profile:', error);\n      setMessage({ type: 'error', text: 'Error al cargar el perfil' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const calculateProfileComplete = () => {\n    let complete = 0;\n    const checks = [\n      profile.name,\n      profile.photoUrl,\n      profile.trade !== Trade.OTHER,\n      profile.experience > 0,\n      profile.location,\n      profile.bio,\n      profile.phone || profile.whatsapp,\n      profile.skills.length > 0,\n      profile.hourlyRate > 0,\n      profile.preferredAreas.length > 0\n    ];\n    \n    checks.forEach(check => {\n      if (check) complete += 10;\n    });\n    \n    setProfileComplete(complete);\n  };\n\n  const handlePhotoUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files && event.target.files[0]) {\n      const file = event.target.files[0];\n      const storageRef = ref(storage, `profile-photos/${currentUser!.uid}`);\n      \n      try {\n        setSaving(true);\n        const snapshot = await uploadBytes(storageRef, file);\n        const photoURL = await getDownloadURL(snapshot.ref);\n        \n        setProfile({ ...profile, photoUrl: photoURL });\n        setMessage({ type: 'success', text: 'Foto actualizada correctamente' });\n      } catch (error) {\n        console.error('Error uploading photo:', error);\n        setMessage({ type: 'error', text: 'Error al subir la foto' });\n      } finally {\n        setSaving(false);\n      }\n    }\n  };\n\n  const handleSave = async () => {\n    try {\n      setSaving(true);\n      \n      // Validate required fields\n      if (!profile.name || !profile.location || profile.trade === Trade.OTHER) {\n        setMessage({ type: 'error', text: 'Por favor completa todos los campos requeridos' });\n        return;\n      }\n      \n      await updateDoc(doc(db, 'workers', currentUser!.uid), {\n        ...profile,\n        updatedAt: new Date()\n      });\n      \n      setMessage({ type: 'success', text: '✅ Perfil actualizado correctamente' });\n      \n      // Redirect to dashboard after successful save\n      setTimeout(() => {\n        navigate('/dashboard');\n      }, 2000);\n    } catch (error) {\n      console.error('Error saving profile:', error);\n      setMessage({ type: 'error', text: 'Error al guardar el perfil' });\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const toggleSkill = (skill: string) => {\n    if (profile.skills.includes(skill)) {\n      setProfile({\n        ...profile,\n        skills: profile.skills.filter(s => s !== skill)\n      });\n    } else {\n      setProfile({\n        ...profile,\n        skills: [...profile.skills, skill]\n      });\n    }\n  };\n\n  const toggleArea = (area: string) => {\n    if (profile.preferredAreas.includes(area)) {\n      setProfile({\n        ...profile,\n        preferredAreas: profile.preferredAreas.filter(a => a !== area)\n      });\n    } else {\n      setProfile({\n        ...profile,\n        preferredAreas: [...profile.preferredAreas, area]\n      });\n    }\n  };\n\n  if (loading) {\n    return (\n      <Container maxWidth=\"lg\" sx={{ py: 4, textAlign: 'center' }}>\n        <CircularProgress />\n        <Typography sx={{ mt: 2 }}>Cargando perfil...</Typography>\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n      <Typography variant=\"h4\" gutterBottom fontWeight=\"bold\">\n        Mi Perfil de Trabajador\n      </Typography>\n\n      {/* Profile Completion Card */}\n      <Card sx={{ mb: 3, bgcolor: profileComplete >= 80 ? 'success.light' : 'warning.light' }}>\n        <CardContent>\n          <Box display=\"flex\" alignItems=\"center\" gap={3}>\n            <CircularProgress \n              variant=\"determinate\" \n              value={profileComplete}\n              size={80}\n              thickness={5}\n              sx={{\n                color: profileComplete >= 80 ? 'success.main' : \n                       profileComplete >= 50 ? 'warning.main' : 'error.main'\n              }}\n            />\n            <Box flex={1}>\n              <Typography variant=\"h6\">\n                Tu perfil está {profileComplete}% completo\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                {profileComplete < 100 \n                  ? 'Completa tu perfil para tener más oportunidades de trabajo'\n                  : '¡Excelente! Tu perfil está completo'}\n              </Typography>\n            </Box>\n          </Box>\n        </CardContent>\n      </Card>\n\n      {message && (\n        <Alert severity={message.type} sx={{ mb: 3 }} onClose={() => setMessage(null)}>\n          {message.text}\n        </Alert>\n      )}\n\n      <Paper>\n        <Tabs value={tabValue} onChange={(e, v) => setTabValue(v)} sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <Tab label=\"Información Personal\" />\n          <Tab label=\"Habilidades\" />\n          <Tab label=\"Certificaciones\" />\n          <Tab label=\"Disponibilidad\" />\n        </Tabs>\n\n        <TabPanel value={tabValue} index={0}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={4} textAlign=\"center\">\n              <Avatar\n                src={profile.photoUrl}\n                sx={{ width: 150, height: 150, mx: 'auto', mb: 2 }}\n              >\n                {profile.name?.[0] || <Person />}\n              </Avatar>\n              <input\n                accept=\"image/*\"\n                type=\"file\"\n                id=\"photo-upload\"\n                hidden\n                onChange={handlePhotoUpload}\n              />\n              <label htmlFor=\"photo-upload\">\n                <Button\n                  variant=\"outlined\"\n                  component=\"span\"\n                  startIcon={<PhotoCamera />}\n                  disabled={saving}\n                  fullWidth\n                >\n                  Subir Foto\n                </Button>\n              </label>\n              <Typography variant=\"caption\" display=\"block\" sx={{ mt: 1 }}>\n                * Una buena foto aumenta tus oportunidades\n              </Typography>\n            </Grid>\n\n            <Grid item xs={12} md={8}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    fullWidth\n                    label=\"Nombre Completo\"\n                    value={profile.name}\n                    onChange={(e) => setProfile({ ...profile, name: e.target.value })}\n                    required\n                    error={!profile.name}\n                    helperText={!profile.name ? 'Campo requerido' : ''}\n                  />\n                </Grid>\n                \n                <Grid item xs={12} md={6}>\n                  <TextField\n                    fullWidth\n                    select\n                    label=\"Oficio Principal\"\n                    value={profile.trade}\n                    onChange={(e) => setProfile({ ...profile, trade: e.target.value as Trade })}\n                    required\n                    error={profile.trade === Trade.OTHER}\n                    helperText={profile.trade === Trade.OTHER ? 'Selecciona tu oficio principal' : ''}\n                  >\n                    {Object.values(Trade).map((trade) => (\n                      <MenuItem key={trade} value={trade}>\n                        {t(`trades.${trade}`)}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <TextField\n                    fullWidth\n                    type=\"number\"\n                    label=\"Años de Experiencia\"\n                    value={profile.experience}\n                    onChange={(e) => setProfile({ ...profile, experience: parseInt(e.target.value) || 0 })}\n                    InputProps={{\n                      inputProps: { min: 0, max: 50 }\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <TextField\n                    fullWidth\n                    label=\"Ubicación (Colonia)\"\n                    value={profile.location}\n                    onChange={(e) => setProfile({ ...profile, location: e.target.value })}\n                    placeholder=\"Ej: Santa Fe, Álvaro Obregón\"\n                    required\n                    error={!profile.location}\n                    helperText={!profile.location ? 'Campo requerido' : 'Indica tu colonia en Álvaro Obregón'}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={6}>\n                  <TextField\n                    fullWidth\n                    label=\"Tarifa por Hora\"\n                    value={profile.hourlyRate || ''}\n                    onChange={(e) => setProfile({ ...profile, hourlyRate: parseFloat(e.target.value) || 0 })}\n                    InputProps={{\n                      startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                    }}\n                    helperText=\"Tu tarifa esperada por hora de trabajo\"\n                  />\n                </Grid>\n\n                <Grid item xs={12}>\n                  <TextField\n                    fullWidth\n                    multiline\n                    rows={4}\n                    label=\"Acerca de mí\"\n                    value={profile.bio}\n                    onChange={(e) => setProfile({ ...profile, bio: e.target.value })}\n                    placeholder=\"Describe tu experiencia, habilidades especiales y lo que te hace único...\"\n                    helperText={`${profile.bio.length}/500 caracteres`}\n                    inputProps={{ maxLength: 500 }}\n                  />\n                </Grid>\n\n                <Grid item xs={12}>\n                  <Divider sx={{ my: 1 }}>\n                    <Chip label=\"Información de Contacto\" size=\"small\" />\n                  </Divider>\n                </Grid>\n\n                <Grid item xs={12} md={4}>\n                  <TextField\n                    fullWidth\n                    label=\"Teléfono\"\n                    value={profile.phone}\n                    onChange={(e) => setProfile({ ...profile, phone: e.target.value })}\n                    placeholder=\"55 1234 5678\"\n                    InputProps={{\n                      startAdornment: <Phone sx={{ mr: 1, color: 'action.active' }} />\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={4}>\n                  <TextField\n                    fullWidth\n                    label=\"WhatsApp\"\n                    value={profile.whatsapp}\n                    onChange={(e) => setProfile({ ...profile, whatsapp: e.target.value })}\n                    placeholder=\"55 1234 5678\"\n                    InputProps={{\n                      startAdornment: <WhatsApp sx={{ mr: 1, color: 'success.main' }} />\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12} md={4}>\n                  <TextField\n                    fullWidth\n                    label=\"Email\"\n                    value={profile.email}\n                    onChange={(e) => setProfile({ ...profile, email: e.target.value })}\n                    InputProps={{\n                      startAdornment: <EmailIcon sx={{ mr: 1, color: 'action.active' }} />\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={12}>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={profile.available}\n                        onChange={(e) => setProfile({ ...profile, available: e.target.checked })}\n                        color=\"success\"\n                      />\n                    }\n                    label={\n                      <Box display=\"flex\" alignItems=\"center\" gap={1}>\n                        {profile.available ? (\n                          <>\n                            <CheckCircle color=\"success\" />\n                            <Typography>Disponible para trabajar</Typography>\n                          </>\n                        ) : (\n                          <>\n                            <Schedule color=\"disabled\" />\n                            <Typography>No disponible actualmente</Typography>\n                          </>\n                        )}\n                      </Box>\n                    }\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={1}>\n          <Typography variant=\"h6\" gutterBottom>\n            Selecciona tus habilidades\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n            Marca todas las habilidades que dominas. Esto ayudará a los empleadores a encontrarte.\n          </Typography>\n\n          <Box display=\"flex\" flexWrap=\"wrap\" gap={1}>\n            {allSkills.map((skill) => (\n              <Chip\n                key={skill}\n                label={skill}\n                onClick={() => toggleSkill(skill)}\n                color={profile.skills.includes(skill) ? 'primary' : 'default'}\n                variant={profile.skills.includes(skill) ? 'filled' : 'outlined'}\n                icon={profile.skills.includes(skill) ? <CheckCircle /> : undefined}\n              />\n            ))}\n          </Box>\n\n          <Divider sx={{ my: 3 }} />\n\n          <Typography variant=\"h6\" gutterBottom>\n            Idiomas\n          </Typography>\n          <FormGroup row>\n            <FormControlLabel\n              control={<Checkbox defaultChecked disabled />}\n              label=\"Español (Nativo)\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox \n                  checked={profile.languages.includes('english_basic')}\n                  onChange={(e) => {\n                    if (e.target.checked) {\n                      setProfile({ ...profile, languages: [...profile.languages, 'english_basic'] });\n                    } else {\n                      setProfile({ ...profile, languages: profile.languages.filter(l => l !== 'english_basic') });\n                    }\n                  }}\n                />\n              }\n              label=\"Inglés Básico\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox \n                  checked={profile.languages.includes('english_intermediate')}\n                  onChange={(e) => {\n                    if (e.target.checked) {\n                      setProfile({ ...profile, languages: [...profile.languages, 'english_intermediate'] });\n                    } else {\n                      setProfile({ ...profile, languages: profile.languages.filter(l => l !== 'english_intermediate') });\n                    }\n                  }}\n                />\n              }\n              label=\"Inglés Intermedio\"\n            />\n          </FormGroup>\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={2}>\n          <Typography variant=\"h6\" gutterBottom>\n            Certificaciones Disponibles\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n            Obtén certificaciones gratuitas o de bajo costo para mejorar tu perfil\n          </Typography>\n\n          <Grid container spacing={2}>\n            {availableCertifications.map((cert) => (\n              <Grid item xs={12} md={6} key={cert.id}>\n                <Card variant=\"outlined\">\n                  <CardContent>\n                    <Box display=\"flex\" gap={2}>\n                      <Avatar sx={{ bgcolor: 'primary.light' }}>\n                        {cert.icon}\n                      </Avatar>\n                      <Box flex={1}>\n                        <Typography variant=\"subtitle1\" fontWeight=\"bold\">\n                          {cert.name}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                          {cert.description}\n                        </Typography>\n                        <Stack direction=\"row\" spacing={1} mb={1}>\n                          <Chip label={cert.provider} size=\"small\" />\n                          <Chip label={cert.duration} size=\"small\" variant=\"outlined\" />\n                          <Chip \n                            label={cert.price} \n                            size=\"small\" \n                            color={cert.price === 'Gratis' ? 'success' : 'default'}\n                          />\n                        </Stack>\n                        <Button \n                          variant=\"contained\" \n                          size=\"small\"\n                          startIcon={<School />}\n                          onClick={() => {\n                            setMessage({ \n                              type: 'success', \n                              text: `Te hemos registrado para ${cert.name}. Recibirás más información por WhatsApp.` \n                            });\n                          }}\n                        >\n                          Inscribirse\n                        </Button>\n                      </Box>\n                    </Box>\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={3}>\n          <Typography variant=\"h6\" gutterBottom>\n            Días Disponibles\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n            Marca los días que puedes trabajar\n          </Typography>\n\n          <Grid container spacing={2} sx={{ mb: 3 }}>\n            {[\n              { day: 'Lunes', key: 'monday' },\n              { day: 'Martes', key: 'tuesday' },\n              { day: 'Miércoles', key: 'wednesday' },\n              { day: 'Jueves', key: 'thursday' },\n              { day: 'Viernes', key: 'friday' },\n              { day: 'Sábado', key: 'saturday' },\n              { day: 'Domingo', key: 'sunday' }\n            ].map(({ day, key }) => (\n              <Grid item xs={6} sm={4} md={3} key={key}>\n                <Card variant=\"outlined\" sx={{ \n                  bgcolor: profile.availability[key as keyof typeof profile.availability] ? 'success.light' : 'grey.100' \n                }}>\n                  <CardContent>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={profile.availability[key as keyof typeof profile.availability]}\n                          onChange={(e) => {\n                            setProfile({\n                              ...profile,\n                              availability: {\n                                ...profile.availability,\n                                [key]: e.target.checked\n                              }\n                            });\n                          }}\n                          color=\"success\"\n                        />\n                      }\n                      label={day}\n                    />\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n\n          <Divider sx={{ my: 3 }} />\n\n          <Typography variant=\"h6\" gutterBottom>\n            Zonas de Trabajo Preferidas\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n            Selecciona las colonias de Álvaro Obregón donde prefieres trabajar\n          </Typography>\n\n          <Box display=\"flex\" flexWrap=\"wrap\" gap={1}>\n            {alvaroObregonAreas.map((area) => (\n              <Chip\n                key={area}\n                label={area}\n                onClick={() => toggleArea(area)}\n                color={profile.preferredAreas.includes(area) ? 'primary' : 'default'}\n                variant={profile.preferredAreas.includes(area) ? 'filled' : 'outlined'}\n                icon={profile.preferredAreas.includes(area) ? <LocationOn /> : undefined}\n              />\n            ))}\n          </Box>\n        </TabPanel>\n      </Paper>\n\n      {/* Save Actions */}\n      <Box display=\"flex\" justifyContent=\"space-between\" mt={3}>\n        <Button\n          variant=\"outlined\"\n          size=\"large\"\n          onClick={() => navigate('/dashboard')}\n        >\n          Cancelar\n        </Button>\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          startIcon={<Save />}\n          onClick={handleSave}\n          disabled={saving || profileComplete < 50}\n        >\n          {saving ? <CircularProgress size={24} /> : 'Guardar Perfil'}\n        </Button>\n      </Box>\n    </Container>\n  );\n};\n\nexport default WorkerProfileEdit;"],"names":["Trade","TabPanel","props","children","value","index","other","_objectWithoutProperties","_excluded","_jsx","_objectSpread","role","hidden","id","concat","Box","sx","p","WorkerProfileEdit","_profile$name","t","useTranslation","navigate","useNavigate","currentUser","userData","useAuth","loading","setLoading","useState","saving","setSaving","message","setMessage","tabValue","setTabValue","profileComplete","setProfileComplete","profile","setProfile","userId","name","trade","OTHER","secondaryTrades","experience","location","bio","available","certifications","rating","totalRatings","photoUrl","phone","email","whatsapp","hourlyRate","skills","languages","availability","monday","tuesday","wednesday","thursday","friday","saturday","sunday","preferredAreas","availableCertifications","provider","duration","price","icon","Restaurant","description","LocalHospital","Security","Translate","CleaningServices","useEffect","fetchProfile","calculateProfileComplete","async","profileDoc","getDoc","doc","db","uid","exists","data","displayName","initialProfile","createdAt","Date","updatedAt","setDoc","error","console","type","text","complete","length","forEach","check","_jsxs","Container","maxWidth","py","textAlign","CircularProgress","Typography","mt","variant","gutterBottom","fontWeight","Card","mb","bgcolor","CardContent","display","alignItems","gap","size","thickness","color","flex","Alert","severity","onClose","Paper","Tabs","onChange","e","v","borderBottom","borderColor","Tab","label","Grid","container","spacing","item","xs","md","Avatar","src","width","height","mx","Person","accept","event","target","files","file","storageRef","ref","storage","snapshot","uploadBytes","photoURL","getDownloadURL","htmlFor","Button","component","startIcon","PhotoCamera","disabled","fullWidth","TextField","required","helperText","select","Object","values","map","MenuItem","parseInt","InputProps","inputProps","min","max","placeholder","parseFloat","startAdornment","InputAdornment","position","multiline","rows","maxLength","Divider","my","Chip","Phone","mr","WhatsApp","EmailIcon","FormControlLabel","control","Switch","checked","_Fragment","CheckCircle","Schedule","paragraph","flexWrap","skill","onClick","includes","filter","s","toggleSkill","undefined","FormGroup","row","Checkbox","defaultChecked","l","cert","Stack","direction","School","day","key","_ref","sm","area","a","toggleArea","LocationOn","justifyContent","Save","updateDoc","setTimeout"],"sourceRoot":""}